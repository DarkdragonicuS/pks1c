//Возвращает список клиентов (контрагентов), с которыми велись работы
Функция ОбслуживащиесяКонтрагентыЗаПериод(ДатаНачала,ДатаОкончания) Экспорт
	СписокКонтрагентов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПочасовыеРаботы.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ПочасовыеРаботы КАК ПочасовыеРаботы
		|ГДЕ
		|	ПочасовыеРаботы.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокКонтрагентов.Добавить(ВыборкаДетальныеЗаписи.Организация);
	КонецЦикла;
	
	Возврат СписокКонтрагентов;
КонецФункции

//ИСТИНА, если после указанной даты для контрагента существует новый договор
Функция ЕстьНовыйДоговор(Контрагент,Дата) Экспорт	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Запись
		|ИЗ
		|	РегистрСведений.ДоговораОбслуживания.СрезПоследних(
		|			,
		|			Контрагент = &Контрагент
		|				И Период > &Период) КАК ДоговораОбслуживанияСрезПоследних";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
КонецФункции

//Получить статус договора
Функция СтатусДоговора(ДокументДоговора) Экспорт
	Если ДокументДоговора.ЧерныйСписок Тогда
		Статус = Перечисления.СтатусыДоговоровОбслуживания.ЧерныйСписок;
	ИначеЕсли Не ЕстьНовыйДоговор(ДокументДоговора.Контрагент,ДокументДоговора.Дата) И (ДокументДоговора.СрокДействия > НачалоДня(ТекущаяДата()) Или Не ЗначениеЗаполнено(ДокументДоговора.СрокДействия)) Тогда
		Статус = Перечисления.СтатусыДоговоровОбслуживания.Действующий;
	Иначе
		Статус = Перечисления.СтатусыДоговоровОбслуживания.Недействующий;
	КонецЕсли;
	
	Возврат Статус;
КонецФункции

//Получить статус обслуживани клиента
Функция СтатусОбслуживания(Знач Контрагент,Дата=Неопределено) Экспорт
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Клиенты") Тогда 
		Контрагент = Контрагент.Контрагент;
	КонецЕсли;
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговораОбслуживанияСрезПоследних.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.ДоговораОбслуживания.СрезПоследних(&Дата, Контрагент = &Контрагент) КАК ДоговораОбслуживанияСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Контрагент", Контрагент); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Статус = СтатусДоговора(ВыборкаДетальныеЗаписи.Регистратор);
	Иначе
		Статус = Перечисления.СтатусыДоговоровОбслуживания.Недействующий;
	КонецЕсли;

	Возврат Статус;
КонецФункции

//Получить дежурного на выбранную дату
Функция ПолучитьДежурного(Дата) Экспорт
	ГрафикДежурствМенеджер = РегистрыСведений.ГрафикДежурств.СоздатьМенеджерЗаписи();
	ГрафикДежурствМенеджер.Дата = Дата;
	ГрафикДежурствМенеджер.Прочитать();
	Возврат ГрафикДежурствМенеджер.Сотрудник;
КонецФункции

//Проверка на то, что дежурство сверхурочное
//Возвращает сотрудника, если дежурство сверхурочное
Функция СверхурочноеДежурство(Дата) Экспорт
	ГрафикДежурствМенеджер = РегистрыСведений.ГрафикДежурств.СоздатьМенеджерЗаписи();
	ГрафикДежурствМенеджер.Дата = Дата;
	ГрафикДежурствМенеджер.Прочитать();
	Если ГрафикДежурствМенеджер.Выбран() Тогда
		Возврат ?(ГрафикДежурствМенеджер.Сверхурочка,ГрафикДежурствМенеджер.Сотрудник,Неопределено);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции