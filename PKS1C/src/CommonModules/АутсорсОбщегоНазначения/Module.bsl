&НаСервере
Функция НайтиКонтрагентаПоКлиенту(Клиент) Экспорт
	ЗапросКонтрагентов = Новый Запрос;
	ЗапросКонтрагентов.Текст = 
		"ВЫБРАТЬ
		|	Клиенты.Контрагент КАК Контрагент
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	Клиенты.Ссылка = &Клиент";
		
	ЗапросКонтрагентов.УстановитьПараметр("Клиент", Клиент);		
	РезультатЗапросаКонтрагентов = ЗапросКонтрагентов.Выполнить();		
	ВыборкаКонтрагентов = РезультатЗапросаКонтрагентов.Выбрать();
	ВыборкаКонтрагентов.Следующий();
	Возврат ВыборкаКонтрагентов.Контрагент;
КонецФункции

&НаСервере
Функция НайтиКлиентаПоКонтрагенту(Контрагент) Экспорт
	ЗапросКлиентов = Новый Запрос;
	ЗапросКлиентов.Текст = 
		"ВЫБРАТЬ
		|	Клиенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	Клиенты.Контрагент = &Контрагент";
		
	ЗапросКлиентов.УстановитьПараметр("Контрагент", Контрагент.Ссылка);		
	РезультатЗапросаКлиентов = ЗапросКлиентов.Выполнить();		
	ВыборкаКлиентов = РезультатЗапросаКлиентов.Выбрать();
	ВыборкаКлиентов.Следующий();
	Возврат ВыборкаКлиентов.Ссылка;
КонецФункции

&НаСервере
Функция ЗапросЦен(Организация, Дата) Экспорт		
	ЗапросЦен = Новый Запрос;
	ЗапросЦен.Текст =
	"ВЫБРАТЬ
	|	ДоговораОбслуживанияСрезПоследних.Тариф КАК Тариф,
	|	ДоговораОбслуживанияСрезПоследних.АбонентскаяПлата КАК АбонентскаяПлата,
	|	ДоговораОбслуживанияСрезПоследних.ТарифСверхурочный КАК ТарифСверхурочный
	|ИЗ
	|	РегистрСведений.ДоговораОбслуживания.СрезПоследних(
	|			&Дата,
	|			(СрокДействия > &Дата
	|				ИЛИ СрокДействия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|				И НЕ ЧерныйСписок) КАК ДоговораОбслуживанияСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоговораОбслуживания.СрезПоследних(&Дата, ) КАК ДоговораОбслуживанияСрезПоследних1
	|		ПО ДоговораОбслуживанияСрезПоследних.Регистратор = ДоговораОбслуживанияСрезПоследних1.Регистратор
	|ГДЕ
	|	ДоговораОбслуживанияСрезПоследних.Период <= &Дата
	|	И ДоговораОбслуживанияСрезПоследних.Контрагент = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДоговораОбслуживанияСрезПоследних.Период УБЫВ";
	
	ЗапросЦен.УстановитьПараметр("Организация", Организация);
	ЗапросЦен.УстановитьПараметр("Дата", НачалоДня(Дата));         	
	РезультатЗапросаЦен = ЗапросЦен.Выполнить();
	ВыборкаЦен = РезультатЗапросаЦен.Выбрать();
	
	ВыборкаЦен.Следующий();
	
	Возврат ВыборкаЦен;	
КонецФункции

&НаСервере
Функция ПосчитатьТариф(Организация, Дата, От, До) Экспорт	
	Заработано = 0;
	Индекс = 0;
	Итог = 0;                                 
	Массив = Новый Массив;
	
	ВыборкаЦен = ЗапросЦен(Организация, Дата);                           	
	//ВыборкаЦен.Следующий();
	
	ЗапросРабот = Новый Запрос;
	ЗапросРабот.Текст = 
		"ВЫБРАТЬ
		|	ПочасовыеРаботы.Организация КАК Организация,
		|	ПочасовыеРаботы.ВремяЗатраты КАК ВремяЗатраты,
		|	ПочасовыеРаботы.Регистратор.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ПочасовыеРаботы КАК ПочасовыеРаботы
		|ГДЕ
		|	ПочасовыеРаботы.Организация = &Организация
		|	И ПочасовыеРаботы.Регистратор.Дата МЕЖДУ &От И &До";
	
	ЗапросРабот.УстановитьПараметр("До", До);
	ЗапросРабот.УстановитьПараметр("От", От);
	ЗапросРабот.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапросаРабот = ЗапросРабот.Выполнить();	
	ВыборкаРабот = РезультатЗапросаРабот.Выбрать();
	
	Пока ВыборкаРабот.Следующий() Цикл
		Итог = Итог + ВыборкаРабот.ВремяЗатраты;
	КонецЦикла;
	
	Если Итог = 0 Тогда
		СтоимостьЧаса = 0;
	Иначе 
		СтоимостьЧаса = ВыборкаЦен.Тариф / Итог;
	КонецЕсли;
	Массив.Добавить(СтоимостьЧаса);
	
	Возврат Окр(Массив[Индекс], 2);
КонецФункции

//Объем работы с шагом 0.5
//минимум для удаленки - 0.5, для выезда - 1
Функция ПолучитьОбъемРаботы(ВремяНачала,ВремяОкончания,УдаленнаяРабота=Ложь) Экспорт
	Результат = 0;
	ФактическоеВремя = (ВремяОкончания - ВремяНачала) / 3600; //В часах
	Результат = (Цел(ФактическоеВремя/0.5) + ?(ФактическоеВремя%0.5 <> 0,1,0))*0.5;
	Если НЕ УдаленнаяРабота И Результат < 1 И Результат > 0 Тогда
		Результат = 1;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура Подождать(Секунд, Shell = Неопределено) Экспорт
    
    Попытка
        Если Shell = Неопределено Тогда
            Shell = Новый COMОбъект("WScript.Shell"); 
        КонецЕсли;
        Shell.Run("timeout /T " + Секунд + " /nobreak" ,0,True);    
    Исключение
        // обработка не требуется
    КонецПопытки;
    
КонецПроцедуры

Функция ПолучитьРеквизит(Объект,ИмяРеквизита) Экспорт
	Возврат Объект[ИмяРеквизита];
КонецФункции


// Округляет число до целого в большую сторону
// 
// Параметры:
//  Число Число
// 
// Возвращаемое значение:
//  Число
Функция ОкруглитьВерх(Число) Экспорт
	Возврат ?(Число=Цел(Число),Число, Окр((Число+0.5),0));
КонецФункции
