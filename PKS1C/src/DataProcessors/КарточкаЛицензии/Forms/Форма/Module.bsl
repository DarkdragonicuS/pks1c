
&НаКлиенте
Процедура Обновить(Команда)
	СформироватьДанныеОЛицензии();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДанныеОЛицензии()
	Если НЕ ПроверкаЗаполненияПараметровЛицензии() Тогда
		Возврат;
	КонецЕсли;

	СформироватьДанныеОЛицензииНаСервере();
		 
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполненияПараметровЛицензии()
	Возврат Истина;
КонецФункции

&НаСервере
Процедура СформироватьДанныеОЛицензииНаСервере()
	Результат.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛицензииОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ЛицензииОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЛицензииОстаткиИОбороты.Серия КАК Серия,
		|	ЛицензииОстаткиИОбороты.Номер КАК Номер,
		|	ЛицензииОстаткиИОбороты.КодАктивации КАК КодАктивации,
		|	ЛицензииОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ЛицензииОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ЛицензииОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.Лицензии.ОстаткиИОбороты(, , Запись, , ) КАК ЛицензииОстаткиИОбороты
		|ГДЕ
		|	ЛицензииОстаткиИОбороты.КодАктивации = &КодАктивации";
	
	Запрос.УстановитьПараметр("КодАктивации", Объект.КодАктивации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НомерЗаписи = 0;
	Макет = Обработки.КарточкаЛицензии.ПолучитьМакет("КарточкаЛицензии");
	КонтрагентПолучатель = Неопределено;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерЗаписи = НомерЗаписи + 1;
		Если НомерЗаписи = 1 Тогда	
			
			//Реквизиты
			Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Объект.Серия = ВыборкаДетальныеЗаписи.Серия;
			Объект.Номер = ВыборкаДетальныеЗаписи.Номер;
			Объект.КодАктивации = ВыборкаДетальныеЗаписи.КодАктивации;	
			
			ЗапросДанных = Новый Запрос;
			ЗапросДанных.Текст = 
				"ВЫБРАТЬ
				|	ЛицензииОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.Лицензии.Остатки(
				|			&Дата,
				|			КодАктивации = &КодАктивации
				|				И Номер = &Номер
				|				И Серия = &Серия) КАК ЛицензииОстатки";
			
			ЗапросДанных.УстановитьПараметр("Дата", ТекущаяДата());
			ЗапросДанных.УстановитьПараметр("КодАктивации", ВыборкаДетальныеЗаписи.КодАктивации);
			ЗапросДанных.УстановитьПараметр("Номер", ВыборкаДетальныеЗаписи.Номер);
			ЗапросДанных.УстановитьПараметр("Серия", ВыборкаДетальныеЗаписи.Серия);
			
			РезультатЗапросаДанных = ЗапросДанных.Выполнить();
			
			ВыборкаДанных = РезультатЗапросаДанных.Выбрать();
			
			Если ВыборкаДанных.Следующий() Тогда
				Если ВыборкаДанных.КоличествоОстаток < 1 Тогда
					ЛицензияПродана = Истина
				Иначе
					ЛицензияПродана = Ложь;
				КонецЕсли;
			Иначе
				ЛицензиияПродана = Истина;
			КонецЕсли;
			
			////////////////////////////////////////////////////////////////////////
			///ШапкаБезШК
			ОбластьШапкаБезШК = Макет.ПолучитьОбласть("ШапкаБезШК");
			ОбластьШапкаБезШК.Параметры.ЛицензияПредставление = ПолучитьПредставлениеЛицензии(
																  ВыборкаДетальныеЗаписи.Серия,
																  ВыборкаДетальныеЗаписи.Номер,
																  ВыборкаДетальныеЗаписи.КодАктивации
																  );
			Результат.Вывести(ОбластьШапкаБезШК);
			
			/////////////////////////////////////////////////////////////////////
			////Шапка
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.Серия = ВыборкаДетальныеЗаписи.Серия;
			ОбластьШапка.Параметры.Номер = ВыборкаДетальныеЗаписи.Номер;
			ОбластьШапка.Параметры.КодАктивации = ВыборкаДетальныеЗаписи.КодАктивации;
			
			ПараметрыШтрихкода = Новый Структура;
			ПараметрыШтрихкода.Вставить("Ширина" , 100);
			ПараметрыШтрихкода.Вставить("Высота" , 100);
			ПараметрыШтрихкода.Вставить("ТипКода" , 16);
			ПараметрыШтрихкода.Вставить("ОтображатьТекст" , Ложь);
			ПараметрыШтрихкода.Вставить("РазмерШрифта", 12);
			ПараметрыШтрихкода.Вставить("УголПоворота" , Число(0));
			ПараметрыШтрихкода.Вставить("ПрозрачныйФон" , Истина);
			ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", 0);
			ПараметрыШтрихкода.Вставить("Масштабировать" , Истина);
			ПараметрыШтрихкода.Вставить("СохранятьПропорции" , Ложь);
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.Серия);
				//ОбластьШапка.Рисунки["QRСерия"].ВыводитьНаПечать = Истина;
				ОбластьШапка.Рисунки["QRСерия"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				//ОбластьШапка.Рисунки["QRСерия"].ВыводитьНаПечать = Ложь;
				ОбластьШапка.Рисунки["QRСерия"].Картинка = Новый Картинка;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номер) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.Номер);
				ОбластьШапка.Рисунки["QRНомер"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				ОбластьШапка.Рисунки["QRНомер"].Картинка = Новый Картинка;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.КодАктивации) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.КодАктивации);
				ОбластьШапка.Рисунки["QRКодАктивации"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				ОбластьШапка.Рисунки["QRКодАктивации"].Картинка = Новый Картинка;
			КонецЕсли;
			Результат.Вывести(ОбластьШапка);
			
			////////////////////////////////////////////////////////////////
			///ДанныеЛицензии
			ОбластьДанныеЛицензии = Макет.ПолучитьОбласть("ДанныеЛицензии");
			ОбластьДанныеЛицензии.Параметры.Номенклатура = Номенклатура;
			ОбластьДанныеЛицензии.Параметры.Продан = ЛицензияПродана;
		
			//Результат.Вывести(ОбластьДанныеЛицензии);
			
			
			//////////////////////////////////////////////////////////////////
			///ДвиженияШапка
			ОбластьДвиженияШапка = Макет.ПолучитьОбласть("ДвиженияШапка");
			
			МакетДвижения = Новый ТабличныйДокумент;
			МакетДвижения.Вывести(ОбластьДвиженияШапка);
			//Результат.Вывести(ОбластьДвиженияШапка);
		КонецЕсли;
		
		/////////////////////////////////////////////////////////////////////
		///ДвиженияСтрока		
		ОбластьДвиженияСтрока = Макет.ПолучитьОбласть("ДвиженияСтрока");
		ОбластьДвиженияСтрока.Параметры.ДокументДвиженияПредставление = ВыборкаДетальныеЗаписи.Регистратор;
		ОбластьДвиженияСтрока.Параметры.Приход = ВыборкаДетальныеЗаписи.КоличествоПриход;
		ОбластьДвиженияСтрока.Параметры.Расход = ВыборкаДетальныеЗаписи.КоличествоРасход;
		ОбластьДвиженияСтрока.Параметры.ОстатокНаКонец = ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;
		
		МакетДвижения.Вывести(ОбластьДвиженияСтрока);
		
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.РеализацияЛицензий") Тогда			
			КонтрагентПолучатель = ВыборкаДетальныеЗаписи.Регистратор.Контрагент;
		КонецЕсли;
		//Результат.Вывести(ОбластьДвиженияСтрока);
	КонецЦикла;
	
	Если НомерЗаписи <> 0 Тогда
		Если ЗначениеЗаполнено(КонтрагентПолучатель) И ЛицензияПродана Тогда
			ОбластьДанныеЛицензии.Параметры.Контрагент = КонтрагентПолучатель;
		КонецЕсли;
		Результат.Вывести(ОбластьДанныеЛицензии);
		
		Результат.Вывести(МакетДвижения);
		
	    КонечныйОстатокЛицензии = ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;
		///////////////////////////////////////////////////////////////////
		///Остатки
		ОбластьОстатки = Макет.ПолучитьОбласть("Остатки");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ЛицензииОстатки.КоличествоОстаток) КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.Лицензии.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ЛицензииОстатки";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ОбластьОстатки.Параметры.ОстаткиЛицензий = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		Иначе
			ОбластьОстатки.Параметры.ОстаткиЛицензий = 0;
		КонецЕсли;
		Результат.Вывести(ОбластьОстатки);
		
		Если КонечныйОстатокЛицензии < 0 Тогда
			////////////////////////////////////////////////////////
			///ПроблемнаяЛицензия
			ОбластьПроблемнаяЛицензия = Макет.ПолучитьОбласть("ПроблемнаяЛицензия");
			Результат.Вывести(ОбластьПроблемнаяЛицензия);
		КонецЕсли;
	Иначе
		/////////////////////////////////////////////////
		///ЛицензияНеНайдена
		ОбластьЛицензияНеНайдена = Макет.ПолучитьОбласть("ЛицензияНеНайдена");
		Результат.Вывести(ОбластьЛицензияНеНайдена);
		ОбластьВведитеЛицензиию = Макет.ПолучитьОбласть("ВведитеЛицензию");
		Результат.Вывести(ОбластьВведитеЛицензиию);
	КонецЕсли;


КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеЛицензии(Серия,Номер,КодАктивации)
	СтрокаПредставление = "S(" + Серия + ")" +
						  "R(" + Номер + ")" +
						  "K(" + КодАктивации + ")";
	Возврат СтрокаПредставление;
КонецФункции

&НаСервере
Процедура ПриОткрытииНаСервере()
	Если ЗначениеЗаполнено(Объект.КодАктивации) Тогда
		СформироватьДанныеОЛицензииНаСервере();
	Иначе
		ЗаполнитьЗапросЛицензии();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
	ПриОткрытииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
	Если Параметры.Свойство("КодАктивации") Тогда
        Объект.КодАктивации = Параметры.КодАктивации;
    КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Печать(Команда)
	ТабДок = ПечатьНаСервере();
	Если ТабДок = Неопределено Тогда
		Сообщить("Лицензия с заданными параметрами не найдена!");
		Возврат;
	Иначе
		ПараметрыФормы = Новый Структура("ТабДок",ТабДок);
		ФормаПечати = ПолучитьФорму("Обработка.КарточкаЛицензии.Форма.ФормаПечати",ПараметрыФормы);
		ФормаПечати.Открыть();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ПечатьНаСервере()
	ТабДок = Новый ТабличныйДокумент;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛицензииОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ЛицензииОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЛицензииОстаткиИОбороты.Серия КАК Серия,
		|	ЛицензииОстаткиИОбороты.Номер КАК Номер,
		|	ЛицензииОстаткиИОбороты.КодАктивации КАК КодАктивации,
		|	ЛицензииОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ЛицензииОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ЛицензииОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.Лицензии.ОстаткиИОбороты(, , Запись, , ) КАК ЛицензииОстаткиИОбороты
		|ГДЕ
		|	ЛицензииОстаткиИОбороты.КодАктивации = &КодАктивации";
	
	Запрос.УстановитьПараметр("КодАктивации", Объект.КодАктивации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НомерЗаписи = 0;
	Макет = Обработки.КарточкаЛицензии.ПолучитьМакет("КарточкаЛицензии");
	КонтрагентПолучатель = Неопределено;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерЗаписи = НомерЗаписи + 1;
		Если НомерЗаписи = 1 Тогда	
			
			Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				
			ЗапросДанных = Новый Запрос;
			ЗапросДанных.Текст = 
				"ВЫБРАТЬ
				|	ЛицензииОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.Лицензии.Остатки(
				|			&Дата,
				|			КодАктивации = &КодАктивации
				|				И Номер = &Номер
				|				И Серия = &Серия) КАК ЛицензииОстатки";
			
			ЗапросДанных.УстановитьПараметр("Дата", ТекущаяДата());
			ЗапросДанных.УстановитьПараметр("КодАктивации", ВыборкаДетальныеЗаписи.КодАктивации);
			ЗапросДанных.УстановитьПараметр("Номер", ВыборкаДетальныеЗаписи.Номер);
			ЗапросДанных.УстановитьПараметр("Серия", ВыборкаДетальныеЗаписи.Серия);
			
			РезультатЗапросаДанных = ЗапросДанных.Выполнить();
			
			ВыборкаДанных = РезультатЗапросаДанных.Выбрать();
			
			Если ВыборкаДанных.Следующий() Тогда
				Если ВыборкаДанных.КоличествоОстаток < 1 Тогда
					ЛицензияПродана = Истина
				Иначе
					ЛицензияПродана = Ложь;
				КонецЕсли;
			Иначе
				ЛицензиияПродана = Истина;
			КонецЕсли;
			
			////////////////////////////////////////////////////////////////////////
			///ШапкаБезШК
			ОбластьШапкаБезШК = Макет.ПолучитьОбласть("ШапкаБезШК");
			ОбластьШапкаБезШК.Параметры.ЛицензияПредставление = ПолучитьПредставлениеЛицензии(
																  ВыборкаДетальныеЗаписи.Серия,
																  ВыборкаДетальныеЗаписи.Номер,
																  ВыборкаДетальныеЗаписи.КодАктивации
																  );
			ТабДок.Вывести(ОбластьШапкаБезШК);
			
			/////////////////////////////////////////////////////////////////////
			////Шапка
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.Серия = ВыборкаДетальныеЗаписи.Серия;
			ОбластьШапка.Параметры.Номер = ВыборкаДетальныеЗаписи.Номер;
			ОбластьШапка.Параметры.КодАктивации = ВыборкаДетальныеЗаписи.КодАктивации;
			
			ПараметрыШтрихкода = Новый Структура;
			ПараметрыШтрихкода.Вставить("Ширина" , 100);
			ПараметрыШтрихкода.Вставить("Высота" , 100);
			ПараметрыШтрихкода.Вставить("ТипКода" , 16);
			ПараметрыШтрихкода.Вставить("ОтображатьТекст" , Ложь);
			ПараметрыШтрихкода.Вставить("РазмерШрифта", 12);
			ПараметрыШтрихкода.Вставить("УголПоворота" , Число(0));
			ПараметрыШтрихкода.Вставить("ПрозрачныйФон" , Истина);
			ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", 0);
			ПараметрыШтрихкода.Вставить("Масштабировать" , Истина);
			ПараметрыШтрихкода.Вставить("СохранятьПропорции" , Ложь);
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.Серия);
				//ОбластьШапка.Рисунки["QRСерия"].ВыводитьНаПечать = Истина;
				ОбластьШапка.Рисунки["QRСерия"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				//ОбластьШапка.Рисунки["QRСерия"].ВыводитьНаПечать = Ложь;
				ОбластьШапка.Рисунки["QRСерия"].Картинка = Новый Картинка;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номер) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.Номер);
				ОбластьШапка.Рисунки["QRНомер"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				ОбластьШапка.Рисунки["QRНомер"].Картинка = Новый Картинка;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.КодАктивации) Тогда
				ПараметрыШтрихкода.Вставить("Штрихкод" , ВыборкаДетальныеЗаписи.КодАктивации);
				ОбластьШапка.Рисунки["QRКодАктивации"].Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			Иначе
				ОбластьШапка.Рисунки["QRКодАктивации"].Картинка = Новый Картинка;
			КонецЕсли;
			ТабДок.Вывести(ОбластьШапка);
			
			////////////////////////////////////////////////////////////////
			///ДанныеЛицензии
			ОбластьДанныеЛицензии = Макет.ПолучитьОбласть("ДанныеЛицензии");
			ОбластьДанныеЛицензии.Параметры.Номенклатура = Номенклатура;
			ОбластьДанныеЛицензии.Параметры.Продан = ЛицензияПродана;
			//ТабДок.Вывести(ОбластьДанныеЛицензии);
			
			//////////////////////////////////////////////////////////////////
			///ДвиженияШапка
			//ОбластьДвиженияШапка = Макет.ПолучитьОбласть("ДвиженияШапка");
			//Результат.Вывести(ОбластьДвиженияШапка);
			МакетДвижения = Новый ТабличныйДокумент;
		КонецЕсли;
		
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.РеализацияЛицензий") Тогда			
			КонтрагентПолучатель = ВыборкаДетальныеЗаписи.Регистратор.Контрагент;
		КонецЕсли;
		
		/////////////////////////////////////////////////////////////////////
		///ДвиженияСтрока		
		//ОбластьДвиженияСтрока = Макет.ПолучитьОбласть("ДвиженияСтрока");
		//ОбластьДвиженияСтрока.Параметры.ДокументДвиженияПредставление = ВыборкаДетальныеЗаписи.Регистратор;
		//ОбластьДвиженияСтрока.Параметры.Приход = ВыборкаДетальныеЗаписи.КоличествоПриход;
		//ОбластьДвиженияСтрока.Параметры.Расход = ВыборкаДетальныеЗаписи.КоличествоРасход;
		//ОбластьДвиженияСтрока.Параметры.ОстатокНаКонец = ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;
		//ТабДок.Вывести(ОбластьДвиженияСтрока);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(КонтрагентПолучатель) И ЛицензияПродана Тогда
		ОбластьДанныеЛицензии.Параметры.Контрагент = КонтрагентПолучатель;
	КонецЕсли;
	ТабДок.Вывести(ОбластьДанныеЛицензии);
	
	ТабДок.Вывести(МакетДвижения);
	
	Если НомерЗаписи = 0 Тогда
	    //КонечныйОстатокЛицензии = ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;
		///////////////////////////////////////////////////////////////////
		///Остатки
		//ОбластьОстатки = Макет.ПолучитьОбласть("Остатки");
		//
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//	"ВЫБРАТЬ
		//	|	СУММА(ЛицензииОстатки.КоличествоОстаток) КАК КоличествоОстаток
		//	|ИЗ
		//	|	РегистрНакопления.Лицензии.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ЛицензииОстатки";
		//
		//Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		//
		//РезультатЗапроса = Запрос.Выполнить();
		//
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//
		//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		//	ОбластьОстатки.Параметры.ОстаткиЛицензий = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		//Иначе
		//	ОбластьОстатки.Параметры.ОстаткиЛицензий = 0;
		//КонецЕсли;
		//Результат.Вывести(ОбластьОстатки);
		//
		//Если КонечныйОстатокЛицензии < 0 Тогда
		//	////////////////////////////////////////////////////////
		//	///ПроблемнаяЛицензия
		//	ОбластьПроблемнаяЛицензия = Макет.ПолучитьОбласть("ПроблемнаяЛицензия");
		//	Результат.Вывести(ОбластьПроблемнаяЛицензия);
		//КонецЕсли;
		/////////////////////////////////////////////////
		///ЛицензияНеНайдена
		//ОбластьЛицензияНеНайдена = Макет.ПолучитьОбласть("ЛицензияНеНайдена");
		//Результат.Вывести(ОбластьЛицензияНеНайдена);
		ТабДок = Неопределено;
	КонецЕсли;
    Возврат ТабДок;
КонецФункции

&НаСервере
Процедура ЗаполнитьЗапросЛицензии()
	Результат.Очистить();
	Макет = Обработки.КарточкаЛицензии.ПолучитьМакет("КарточкаЛицензии");
	ОбластьВведитеЛицензию = Макет.ПолучитьОбласть("ВведитеЛицензию");
	Результат.Вывести(ОбластьВведитеЛицензию);
КонецПроцедуры

&НаКлиенте
Процедура КодАктивацииПриИзменении(Элемент)
	Объект.Номер = "";
	Объект.Серия = "";
	ЗаполнитьЗапросЛицензии();
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ВводДоступен() Тогда 
		Объект.КодАктивации = Данные;
		Обновить(Неопределено);
	КонецЕсли;
КонецПроцедуры
