
&НаКлиенте
Процедура ЗаявкиПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ЗаявкиПриАктивизацииСтрокиНаСервере(ТекущиеДанные);
	//ЗаблокироватьЭлементы(Элементы.ГруппаПраво);
	ЗаблокироватьПоляЗаявки();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаявкаЗакрыта(Заявка)
	Возврат Заявка.Статус = Перечисления.СтатусыЗаявок.Закрыта Или Заявка.Статус = Перечисления.СтатусыЗаявок.Отменена; 
КонецФункции

&НаСервереБезКонтекста
Функция ЗаявкаЧужая(Заявка)
	Возврат ЗначениеЗаполнено(Заявка.ОтветственноеЛицо) И Заявка.ОтветственноеЛицо <> Пользователи.АвторизованныйПользователь().ФизическоеЛицо; 
КонецФункции

&НаСервереБезКонтекста
Функция РазрешеноРедактированиеЗакрытыхЗаявок()
	Возврат УправлениеДоступом.ЕстьРоль("асРедактированиеЗакрытыхЗаявок");
КонецФункции

&НаСервереБезКонтекста
Функция РазрешеноРедактированиеЧужихЗаявок()
	Возврат УправлениеДоступом.ЕстьРоль("асРедактированиеЧужихЗаявок");
КонецФункции

&НаКлиенте
Процедура ЗаблокироватьПоляЗаявки()
	Элементы.ЗаявкиНомер1.Доступность = Ложь;
	Элементы.ЗаявкиДатаОткрытия1.Доступность = Ложь;
	Элементы.ЗаявкиДатаЗакрытия1.Доступность = Ложь;
	Элементы.ЗаявкиПлановаяДатаРешения1.Доступность = Ложь;
	Элементы.ЗаявкиСтатус1.Доступность = Ложь;
	Элементы.ЗаявкиТемаЗаявки1.Доступность = Ложь;
	Элементы.ЗаявкиТипЗаявки1.Доступность = Ложь;
	Элементы.ЗаявкиКлиент1.Доступность = Ложь;
	Элементы.ЗаявкиКонтактноеЛицо1.Доступность = Ложь;
	Элементы.ЗаявкиОтветственноеЛицо1.Доступность = Ложь;
	Элементы.ЗаявкиКонтактныйТелефон1.Доступность = Ложь;
	Элементы.ЗаявкиПочта1.Доступность = Ложь;
	Элементы.ЗаявкиПриоритет1.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура РазблокироватьПоляЗаявки()
	//Элементы.ЗаявкиНомер1.ТолькоПросмотр = Ложь;
	//Элементы.ЗаявкиДатаОткрытия.ТолькоПросмотр = Ложь;
	//Элементы.ЗаявкиДатаЗакрытия.ТолькоПросмотр = Ложь;
	Элементы.ЗаявкиПлановаяДатаРешения1.Доступность = Истина;
	Элементы.ЗаявкиСтатус1.Доступность = Истина;
	Элементы.ЗаявкиТемаЗаявки1.Доступность = Истина;
	Элементы.ЗаявкиТипЗаявки1.Доступность = Истина;
	Элементы.ЗаявкиКлиент1.Доступность = Истина;
	Элементы.ЗаявкиКонтактноеЛицо1.Доступность = Истина;
	Элементы.ЗаявкиОтветственноеЛицо1.Доступность = Истина;
	Элементы.ЗаявкиКонтактныйТелефон1.Доступность = Истина;
	Элементы.ЗаявкиПочта1.Доступность = Истина;
	Элементы.ЗаявкиПриоритет1.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьЭлементы(ЭлементГруппа)
	Для Каждого Элемент Из ЭлементГруппа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			Элемент.ТолькоПросмотр = Истина;
		Иначе			
			Продолжить;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗаявку(Команда)
	Если ЗаявкаЗакрыта(Заявка) И Не РазрешеноРедактированиеЗакрытыхЗаявок() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заявка закрыта!");
		Возврат;
	КонецЕсли;
	Если ЗаявкаЧужая(Заявка) И Не РазрешеноРедактированиеЧужихЗаявок() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запрещено изменять чужие заявки!");
		Возврат;
	КонецЕсли;
	РазблокироватьПоляЗаявки();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияЗаявки(Команда)
	Если Не ЕстьПравоНаЗапись() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запрещено изменять чужие заявки!");
		Возврат;
	КонецЕсли;
	Если Не ПроверитьНаличиеКонтактногоЛицаКлиента(ЗаявкаКлиент,ЗаявкаКонтактноеЛицо) Тогда
		Ответ = Вопрос("Указанного контактное лицо не соответствует клиенту. Создать соответствие?",РежимДиалогаВопрос.ДаНетОтмена,,,"Контакт не соответствует клиенту");
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ДобавлениеКонтактногоЛицаКлиента(ЗаявкаКлиент,ЗаявкаКонтактноеЛицо);
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;			
		КонецЕсли;
	КонецЕсли;
	Если Не ПроверитьНаличиеКонтактовКонтактногоЛицаКлиента(ЗаявкаКонтактноеЛицо,ЗначениеЗаполнено(ЗаявкаТелефон),ЗначениеЗаполнено(ЗаявкаПочта)) Тогда
		Сообщить("У указанного контактного лица в карточке есть недостающие контакты");
	КонецЕсли;
	
	Дата = ТекущаяДата();
	Если ЗаявкаСтатус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Закрыта") Или ЗаявкаСтатус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Отменена")Тогда
		Ответ = Вопрос("Внимание! После проведения заявка будет закрыта! Вы уверены?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
//	Если Параметры.Ключ.Пустая() Тогда
//		Объект.ДатаОткрытия = Дата; 
//	КонецЕсли;
	//ЗаявкаДата = Дата;
	
	ЗаписатьЗаявку();
	
	
	
	
	
	
	
	ТекущийОбъект.ТекстЗаявки = Новый ХранилищеЗначения(ТекстЗаявки);
	ТекущийОбъект.Решение = Новый ХранилищеЗначения(Решение);
	ТекущийОбъект.Комментарий = Новый ХранилищеЗначения(Комментарий);
КонецПроцедуры

// Записывает заявку
&НаСервере
Процедура ЗаписатьЗаявку()
	ЗаявкаОб = Заявка.ПолучитьОбъект();
	
	ЗаявкаОб.Статус = ЗаявкаСтатус;
	ЗаявкаОб.ТемаЗаявки = ЗаявкаТема;
	ЗаявкаОб.Клиент = ЗаявкаКлиент;
	ЗаявкаОб.ТипЗаявки = ЗаявкаТип;
	ЗаявкаОб.КонтактноеЛицо = ЗаявкаКонтактноеЛицо;
	ЗаявкаОб.ОтветственноеЛицо = ЗаявкаИсполнитель;
	ЗаявкаОб.КонтактныйТелефон = ЗаявкаТелефон;
	ЗаявкаОб.Почта = ЗаявкаПочта;
	ЗаявкаОб.Приоритет = ЗаявкаПриоритет;
	ЗаявкаОб.ПлановаяДатаРешения = ЗаявкаПлановаяДатаРешения;
	ЗаявкаОб.ТекстЗаявки = Новый ХранилищеЗначения(ТекстЗаявки);
	ЗаявкаОб.Комментарий = Новый ХранилищеЗначения(КомментарийЗаявки); 
	
	ЗаявкаОб.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзмененияЗаявки(Команда)
	ТекущиеДанные = Элементы.Заявки.ТекущиеДанные;
	ЗаполнитьРеквизитыЗаявки(ТекущиеДанные);
	ЗаблокироватьПоляЗаявки();
КонецПроцедуры

&НаКлиенте
Процедура РазблокироватьЭлементы(ЭлементГруппа)
	Для Каждого Элемент Из ЭлементГруппа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			Элемент.ТолькоПросмотр = Ложь;
			Элемент.Доступность = Истина;
			РазблокироватьЭлементы(Элемент);
		Иначе			
			Продолжить;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаявкиПриАктивизацииСтрокиНаСервере(ТекущиеДанные)
	ЗаполнитьРеквизитыЗаявки(ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыЗаявки(ТекущиеДанные)
	Заявка = ТекущиеДанные.Ссылка;
	ЗаявкаНомер = Заявка.Номер;
	ЗаявкаДатаОткрытия = Заявка.ДатаОткрытия;
	ЗаявкаДатаЗакрытия = Заявка.ДатаЗакрытия;
	ЗаявкаПлановаяДатаРешения = Заявка.ПлановаяДатаРешения;
	ЗаявкаСтатус = Заявка.Статус;
	ЗаявкаТема = Заявка.ТемаЗаявки;
	ЗаявкаТип = Заявка.ТипЗаявки;
	ЗаявкаКлиент = Заявка.Клиент;
	ЗаявкаКонтактноеЛицо = Заявка.КонтактноеЛицо;
	ЗаявкаИсполнитель = Заявка.ОтветственноеЛицо;
	ЗаявкаТелефон = Заявка.КонтактныйТелефон;
	ЗаявкаПочта = Заявка.Почта;
	ЗаявкаПриоритет = Заявка.Приоритет;
		
	ТекстЗаявки = Заявка.ТекстЗаявки.Получить();
	КомментарийЗаявки = Заявка.Комментарий.Получить();
КонецПроцедуры

&НаСервере
Функция ЕстьПравоНаЗапись()
	СтарыйИсполнитель = Заявка.ОтветственноеЛицо;
	Если Не УправлениеДоступом.ЕстьРоль("асРедактированиеЧужихЗаявок")
	   И (Не (СтарыйИсполнитель = Справочники.ФизическиеЛица.ПустаяСсылка() ИЛИ СтарыйИсполнитель = Пользователи.АвторизованныйПользователь().ФизическоеЛицо)
	   ИЛИ Не (Объект.ОтветственноеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() ИЛИ Объект.ОтветственноеЛицо = Пользователи.АвторизованныйПользователь().ФизическоеЛицо)) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьНаличиеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо)
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Или Не ЗначениеЗаполнено(Клиент) Тогда
		Возврат Истина;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КлиентыКонтактныеЛица.КонтактноеЛицо
		|ИЗ
		|	Справочник.Клиенты.КонтактныеЛица КАК КлиентыКонтактныеЛица
		|ГДЕ
		|	КлиентыКонтактныеЛица.Ссылка = &Клиент
		|	И КлиентыКонтактныеЛица.КонтактноеЛицо = &КонтактноеЛицо";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("КонтактноеЛицо",КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавлениеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо)
	АутсорсРаботы.ДобавлениеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНаличиеКонтактовКонтактногоЛицаКлиента(КонтактноеЛицо,ТелефонУказан=Ложь,ЭлектроннаяПочтаУказана=Ложь)
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		Возврат Истина;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип,
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТелефонКУказанию = Истина;
	ПочтаКУказанию = Истина;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица Тогда
			ТелефонКУказанию = Ложь;
		ИначеЕсли ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
			ПочтаКУказанию = Ложь;
		КонецЕсли
	КонецЦикла;
	ТелефонКУказанию = ТелефонКУказанию И ТелефонУказан;
	ПочтаКУказанию = ПочтаКУказанию И ЭлектроннаяПочтаУказана;
	Возврат НЕ (ТелефонКУказанию ИЛИ ПочтаКУказанию);
КонецФункции