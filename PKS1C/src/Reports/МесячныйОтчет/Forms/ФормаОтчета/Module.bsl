
&НаСервере
Процедура СформироватьНаСервере(ТабДок, Организация, Месяц)
	Договор = Истина;
	
	Макет = Отчеты.МесячныйОтчет.ПолучитьМакет("Макет");
	ОбластьПараметры = Макет.ПолучитьОбласть("Параметры");	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтроки = Макет.ПолучитьОбласть("Строки");	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьПараметры.Параметры.Организация = Организация;
	ОбластьПараметры.Параметры.От = Формат(Месяц, "ДФ=""дд.ММ.гггг""");
	ОбластьПараметры.Параметры.До = Формат(КонецМесяца(Месяц), "ДФ=""дд.ММ.гггг""");
	
	ВыборкаЦен = ЗапросЦен(Организация, Месяц);
	Если ВыборкаЦен.Количество() = 0 Тогда
		Сообщение = "ОШИБКА! С контрагенотом " + Организация + " к выбранному месяцу не был заключен договор обслуживания.";
		Сообщить(Сообщение);
		Договор = Ложь;
	КонецЕсли;
	
	Тариф = ?(Договор,ВыборкаЦен.Тариф,0);
	ТарифСверхурочный = ?(Договор,ВыборкаЦен.ТарифСверхурочный,0);
	АбонентскаяПлата = ?(Договор,ВыборкаЦен.АбонентскаяПлата,Ложь);
	
	ОбластьПараметры.Параметры.Тариф = Тариф;
	ОбластьПараметры.Параметры.АбонентскаяПлата = АбонентскаяПлата;
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.Вывести(ОбластьПараметры);
	ТабДок.Вывести(ОбластьШапка);
		
	ЗапросРабот = Новый Запрос;
	ЗапросРабот.Текст = 
		"ВЫБРАТЬ
		|	ПочасовыеРаботы.Удаленка КАК Удаленка,
		|	ПочасовыеРаботы.Сверхурочка КАК Сверхурочка,
		|	//|	ПочасовыеРаботы.Исполнитель КАК Исполнитель,
		|	ПочасовыеРаботы.ВремяПрибытия КАК ВремяПрибытия,
		|	ПочасовыеРаботы.ВремяЗавершения КАК ВремяЗавершения,
		|	ПочасовыеРаботы.ВремяЗатраты КАК ВремяЗатраты,
		|	ПочасовыеРаботы.СоставРабот КАК СоставРабот,
		|	ПочасовыеРаботы.Регистратор.Дата КАК Дата,
		|	ПочасовыеРаботы.Клиент КАК Клиент,
		|	ПочасовыеРаботы.Регистратор.Ссылка КАК РегистраторСсылка
		|ИЗ
		|	РегистрСведений.ПочасовыеРаботы КАК ПочасовыеРаботы
		|ГДЕ
		|	ПочасовыеРаботы.Организация = &Организация
		|	И ПочасовыеРаботы.Регистратор.Дата МЕЖДУ &От И &До
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	ВремяПрибытия,
		|	ВремяЗавершения";	
	ЗапросРабот.УстановитьПараметр("До", КонецМесяца(Месяц));
	ЗапросРабот.УстановитьПараметр("От", Месяц);
	ЗапросРабот.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапросаРабот = ЗапросРабот.Выполнить();	
	ВыборкаРабот = РезультатЗапросаРабот.Выбрать();
	
	Если ВыборкаРабот.Количество() = 0 Тогда
		Сообщить("ОШИБКА! В выбраном месяце не было совершено ни одной работы");
		ТабДок.Вывести(ОбластьПодвал);
		Возврат;
	КонецЕсли;
	
	ИтогСумма = 0;
	ИтогВремязатраты = 0;
	ИтогСуммаОбычУдл = 0;
	ИтогВремязатратыОбычУдл = 0;
	ИтогСуммаОбычВыезд = 0;
	ИтогВремязатратыОбычВыезд = 0;
	ИтогСуммаСверхУдл = 0;
	ИтогВремязатратыСверхУдл = 0;
	ИтогСуммаСверхВыезд = 0;
	ИтогВремязатратыСверхВыезд = 0;
	
	НомерРаботы = 1;
	
	Пока ВыборкаРабот.Следующий() Цикл
		ОбластьСтроки.Параметры.Дата = Формат(ВыборкаРабот.Дата, "ДФ=дд.ММ.гггг");
		//ОбластьСтроки.Параметры.Исполнитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаРабот.Исполнитель.Наименование);
		ОбластьСтроки.Параметры.Клиент = ВыборкаРабот.Клиент;
		ОбластьСтроки.Параметры.ВремяПрибытия = Формат(ВыборкаРабот.ВремяПрибытия, "ДФ=ЧЧ:мм:сс");
		ОбластьСтроки.Параметры.ВремяЗавершения = Формат(ВыборкаРабот.ВремяЗавершения, "ДФ=ЧЧ:мм:сс");
		ОбластьСтроки.Параметры.Удаленка = ВыборкаРабот.Удаленка;
		ОбластьСтроки.Параметры.Сврехурочка = ВыборкаРабот.Сверхурочка;
		ОбластьСтроки.Параметры.СоставРабот = ВыборкаРабот.СоставРабот;
		ОбластьСтроки.Параметры.Документ = ВыборкаРабот.РегистраторСсылка;
		
		Если ВыборкаРабот.Сверхурочка И ТарифСверхурочный <> 0 Тогда
			ОбластьСтроки.Параметры.Сумма = ТарифСверхурочный * ВыборкаРабот.ВремяЗатраты;	
		Иначе 
			Если ОбластьПараметры.Параметры.АбонентскаяПлата Тогда
				ОбластьСтроки.Параметры.Сумма = 0;
			Иначе
				ОбластьСтроки.Параметры.Сумма = ОбластьПараметры.Параметры.Тариф * ВыборкаРабот.ВремяЗатраты;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьСтроки.Параметры.Времязатраты = ВыборкаРабот.ВремяЗатраты;     
		
		ИтогСумма = ИтогСумма + ОбластьСтроки.Параметры.Сумма; 
		ИтогВремязатраты = ИтогВремязатраты + ОбластьСтроки.Параметры.Времязатраты;
		
		Если ВыборкаРабот.Сверхурочка Тогда
			Если ВыборкаРабот.Удаленка Тогда
				ИтогСуммаСверхУдл = ИтогСуммаСверхУдл + ОбластьСтроки.Параметры.Сумма; 
				ИтогВремязатратыСверхУдл = ИтогВремязатратыСверхУдл + ОбластьСтроки.Параметры.Времязатраты;          
			Иначе
				ИтогСуммаСверхВыезд = ИтогСуммаСверхВыезд + ОбластьСтроки.Параметры.Сумма; 
				ИтогВремязатратыСверхВыезд = ИтогВремязатратыСверхВыезд + ОбластьСтроки.Параметры.Времязатраты;
			КонецЕсли;
		Иначе
			Если ВыборкаРабот.Удаленка Тогда
				ИтогСуммаОбычУдл = ИтогСуммаОбычУдл + ОбластьСтроки.Параметры.Сумма; 
				ИтогВремязатратыОбычУдл = ИтогВремязатратыОбычУдл + ОбластьСтроки.Параметры.Времязатраты;          
			Иначе
				ИтогСуммаОбычВыезд = ИтогСуммаОбычВыезд + ОбластьСтроки.Параметры.Сумма; 
				ИтогВремязатратыОбычВыезд = ИтогВремязатратыОбычВыезд + ОбластьСтроки.Параметры.Времязатраты;
			КонецЕсли;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСтроки);
		
		Если Не Договор Тогда
			Область= ТабДок.Область("R" + Строка(НомерРаботы + 9) + "C2:R" + Строка(НомерРаботы + 9) + "C18");
			Область.ЦветФона = WebЦвета.БледноКрасноФиолетовый;
		КонецЕсли;
		НомерРаботы = НомерРаботы + 1;
	КонецЦикла;

	ОбластьПодвал.Параметры.ИтогСумма = ИтогСумма;
	ОбластьПодвал.Параметры.ИтогВремязатраты = ИтогВремязатраты; 
	
	ОбластьПодвал.Параметры.ИтогСуммаСверхУдл = ИтогСуммаСверхУдл;
	ОбластьПодвал.Параметры.ИтогВремязатратыСверхУдл = ИтогВремязатратыСверхУдл;
	
	ОбластьПодвал.Параметры.ИтогСуммаСверхВыезд = ИтогСуммаСверхВыезд;
	ОбластьПодвал.Параметры.ИтогВремязатратыСверхВыезд = ИтогВремязатратыСверхВыезд;
	
	ОбластьПодвал.Параметры.ИтогСуммаОбычУдл = ИтогСуммаОбычУдл;
	ОбластьПодвал.Параметры.ИтогВремязатратыОбычУдл = ИтогВремязатратыОбычУдл;
	
	ОбластьПодвал.Параметры.ИтогСуммаОбычВыезд = ИтогСуммаОбычВыезд;
	ОбластьПодвал.Параметры.ИтогВремязатратыОбычВыезд = ИтогВремязатратыОбычВыезд;
	
	ТабДок.Вывести(ОбластьПодвал);                                                                                                 		
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере(ТабДок, Организация, Месяц);
КонецПроцедуры

&НаКлиенте
Процедура ОтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭтаФорма.Месяц = ОткрытьФормуМодально("Обработка.ВыпадающийВыборПериода.Форма.Форма2"); 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Месяц) Тогда
		СформироватьНаСервере(ТабДок, Организация, Месяц);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Месяц) Тогда
		Месяц = НачалоМесяца(ТекущаяДата());	
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Организация") Тогда
        Организация = Параметры.Организация;
	КонецЕсли;
	Если Параметры.Свойство("Период") Тогда
		Месяц = Параметры.Период;
	КонецЕсли;
КонецПроцедуры

