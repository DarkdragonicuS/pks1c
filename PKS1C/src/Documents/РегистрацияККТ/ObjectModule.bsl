
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.ДатыФН.Записывать = Истина;
	Движение = Движения.ДатыФН.Добавить();
	Движение.ФискальныйНакопитель = ФискальныйНакопитель;
	Движение.Клиент = Клиент;
	Движение.СрокДействия = СрокДействия;
	Движение.Период = ТекущаяДата();
	
	Движения.КарточкиРегистрацийККТ.Записывать = Истина;
	Движение = Движения.КарточкиРегистрацийККТ.Добавить();
	Движение.Период = ?(ЗначениеЗаполнено(ДатаФормированияФП),ДатаФормированияФП,Дата);
	Движение.ККТ = ККТ;
	Движение.ФН = ФискальныйНакопитель;
	Движение.РН = РегистрационныйНомерККТ;
	Если ВидОперации = Перечисления.ВидыОперацийККТ.Регистрация Тогда
		Движение.Статус = Перечисления.СтатусыРегистрацииККТ.Зарегистрирована;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийККТ.Перерегистрация Тогда
		Движение.Статус = Перечисления.СтатусыРегистрацииККТ.Перерегистрирована;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийККТ.Закрытие Тогда
		Движение.Статус = Перечисления.СтатусыРегистрацииККТ.СнятаСРегистрации;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЭтотОбъект.ЭтоНовый() Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ВидОперации <> Перечисления.ВидыОперацийККТ.Закрытие И ЗначениеЗаполнено(ФискальныйНакопитель) Тогда
		ЗапросФН = Новый Запрос;
		ЗапросФН.Текст = 
			"ВЫБРАТЬ
			|	ДатыФН.ФискальныйНакопитель КАК ФискальныйНакопитель
			|ИЗ
			|	РегистрСведений.ДатыФН КАК ДатыФН
			|ГДЕ
			|	ДатыФН.ФискальныйНакопитель = &ФискальныйНакопитель
			|	И ДатыФН.Регистратор <> &Регистратор
			|	И ДатыФН.Период < &Период";
		
		ЗапросФН.УстановитьПараметр("ФискальныйНакопитель", ФискальныйНакопитель); 
		ЗапросФН.УстановитьПараметр("Регистратор", ЭтотОбъект.Ссылка);
		ЗапросФН.УстановитьПараметр("Период",Дата);
		
		РезультатЗапросаФН = ЗапросФН.Выполнить();
		ВыборкаФН = РезультатЗапросаФН.Выбрать();
		
		Если ВыборкаФН.Следующий() Тогда
			Если ВидОперации = Перечисления.ВидыОперацийККТ.Регистрация Тогда
				Сообщить("Ошибка! Данный фискальный накопитель уже активирован");
				Отказ = Истина;
			ИначеЕсли ВидОперации = Перечисления.ВидыОперацийККТ.Закрытие Тогда
				ФН = ВыборкаФН.ФискальныйНакопитель.ПолучитьОбъект();
				ФН.Закрыт = Истина;
				ФН.Записать();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийККТ.Закрытие И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ФН = ФискальныйНакопитель.ПолучитьОбъект();
		ФН.Закрыт = Истина;
		ФН.Записать();
		Сообщить("Фискальный накопитель " + ФискальныйНакопитель + " успешно закрыт");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ВидОперации = Перечисления.ВидыОперацийККТ.Закрытие Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ФискальныйНакопитель"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("СрокДействия"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Клиент"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ККТ"));
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Автор = Пользователи.АвторизованныйПользователь();
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РегистрацияККТ") Тогда
		// Заполнение шапки
		Автономность = ДанныеЗаполнения.Автономность;
		АдресККТГород = ДанныеЗаполнения.АдресККТГород;
		АдресККТДом = ДанныеЗаполнения.АдресККТДом;
		АдресККТДомТип = ДанныеЗаполнения.АдресККТДомТип;
		АдресККТИндекс = ДанныеЗаполнения.АдресККТИндекс;
		АдресККТКвартира = ДанныеЗаполнения.АдресККТКвартира;
		АдресККТКвартираТип = ДанныеЗаполнения.АдресККТКвартираТип;
		АдресККТКорпус = ДанныеЗаполнения.АдресККТКорпус;
		АдресККТКорпусТип = ДанныеЗаполнения.АдресККТКорпусТип;
		АдресККТМестоПрименения = ДанныеЗаполнения.АдресККТМестоПрименения;
		АдресККТНаселенныйПункт = ДанныеЗаполнения.АдресККТНаселенныйПункт;
		АдресККТРайон = ДанныеЗаполнения.АдресККТРайон;
		АдресККТРегион = ДанныеЗаполнения.АдресККТРегион;
		АдресККТРегионНаименование = ДанныеЗаполнения.АдресККТРегионНаименование;
		АдресККТУлица = ДанныеЗаполнения.АдресККТУлица;
		ВидОперации = Перечисления.ВидыОперацийККТ.Перерегистрация;
		//ДатаФормированияФП = ДанныеЗаполнения.ДатаФормированияФП;
		ККТ = ДанныеЗаполнения.ККТ;
		Клиент = ДанныеЗаполнения.Клиент;
		//Комментарий = ДанныеЗаполнения.Комментарий;
		//НомерФД = ДанныеЗаполнения.НомерФД;
		ОператорФискальныхДанных = ДанныеЗаполнения.ОператорФискальныхДанных;
		//ПричиныПеререгистрации = ДанныеЗаполнения.ПричиныПеререгистрации;
		РегистрационныйНомерККТ = ДанныеЗаполнения.РегистрационныйНомерККТ;
		СведенияОбИспользованииККТ = ДанныеЗаполнения.СведенияОбИспользованииККТ;
		СрокДействия = ДанныеЗаполнения.СрокДействия;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		//ДокументЗакрытияФН = ДанныеЗаполнения.Ссылка;
		ФискальныйНакопитель = ДанныеЗаполнения.ФискальныйНакопитель;
		//ФискальныйПризнак = ДанныеЗаполнения.ФискальныйПризнак;
		СведенияОбСНО = ДанныеЗаполнения.СведенияОбСНО;
		КонтактнаяИнформация.Загрузить(ДанныеЗаполнения.КонтактнаяИнформация.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//Фиксация в истории изменений
	АутсорсФункцииДокументовСервер.УстановитьИзменениеДокумента(ЭтотОбъект.Ссылка);
КонецПроцедуры
