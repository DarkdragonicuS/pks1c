// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати - СписокЗначений - значение - ссылка на объект;
//                                            представление - имя области, в которой был выведен объект (выходной параметр);
//  ПараметрыВывода - Структура - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Доверенность");
    Если НужноПечататьМакет Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
        КоллекцияПечатныхФорм,
        "Доверенность",
        НСтр("ru = 'Доверенность'"),
        ПечатьДоверенности(МассивОбъектов, ОбъектыПечати),
        ,
        "Документ.РегстрацияККТ.Доверенность");
    КонецЕсли;
КонецПроцедуры

Функция ПечатьДоверенности(МассивОбъектов, ОбъектыПечати)
	// Создаем табличный документ и устанавливаем имя параметров печати.
    ТабличныйДокумент = Новый ТабличныйДокумент;
    ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Доверенность";
    ДатаОкончанияДоверенности = НачалоДня(ТекущаяДата()) + 10 * 24 * 3600;
    // Получаем запросом необходимые данные.
    Запрос = Новый Запрос();
    Запрос.Текст =
    "ВЫБРАТЬ
    |	РегистрацияККТ.Ссылка КАК Ссылка,
    |	РегистрацияККТ.Дата КАК Дата,
    |	РегистрацияККТ.Клиент КАК Клиент,
    |	РегистрацияККТ.Клиент.ПолноеНаименование КАК КлиентПредставление,
    |	РегистрацияККТ.Клиент.ИНН КАК ИННКлиента,
    |	РегистрацияККТ.Клиент.ОГРН КАК ОГРНКлиента,
    |	РегистрацияККТ.Клиент.Представитель КАК Представитель,
    |	РегистрацияККТ.Клиент.Доверитель КАК ДоверительПредставление
    |ИЗ
    |	Документ.РегистрацияККТ КАК РегистрацияККТ
    |ГДЕ
    |	РегистрацияККТ.Ссылка В (&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    ДанныеДоверенности = Запрос.Выполнить().Выбрать();
    
    ПервыйДокумент = Истина;
    Пока ДанныеДоверенности.Следующий() Цикл
        Если Не ПервыйДокумент Тогда
            // Все документы нужно выводить на разных страницах.
            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        Представитель = ДанныеДоверенности.Представитель;
        АдресПредставителя = ПолучитьАдресПредставителя(Представитель);
        ПредставительПредставлениеИнициалы = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Представитель);
        ПредставительПредставлениеФИО = Представитель.Наименование;
        ПредставительПредставлениеДП = СклонениеПредставленийОбъектов.ПросклонятьПредставление(ПредставительПредставлениеФИО, 3);
        Паспорт = ФизическиеЛицаУТ.ПолучитьДокументФизическогоЛицаПоУмолчанию(Представитель, Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
        ПаспортПредставление = ПаспортПредставление(Паспорт);
        
        Макет = ПолучитьМакет("Доверенность");
        
        ОбластьШапка = Макет.ПолучитьОбласть("Шапка");    	
        ОбластьТекстДоверенности = Макет.ПолучитьОбласть("ТекстДоверенности");
        ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
        
        ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеДоверенности);
        ЗаполнитьЗначенияСвойств(ОбластьТекстДоверенности.Параметры, ДанныеДоверенности);
        ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеДоверенности);    
    	
    	ОбластьШапка.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='dd MMMM yyyy ""г.""';");
    	
    	ОбластьТекстДоверенности.Параметры.ПаспортПредставление = ПаспортПредставление;
    	ОбластьТекстДоверенности.Параметры.ПредставительПредставлениеДП = ПредставительПредставлениеДП;
    	ОбластьТекстДоверенности.Параметры.АдресПредставителяПредставление = АдресПредставителя;
    	ОбластьТекстДоверенности.Параметры.ДатаОкончанияДоверенности = Формат(ДатаОкончанияДоверенности,"ДФ='dd MMMM yyyy ""г.""';");
    	
    	ОбластьПодвал.Параметры.ПредставительПредставление = ПредставительПредставлениеФИО;
    	ОбластьПодвал.Параметры.ДоверительПредставление = ДанныеДоверенности.ДоверительПредставление;
    	
    	ТабличныйДокумент.Вывести(ОбластьШапка);
    	ТабличныйДокумент.Вывести(ОбластьТекстДоверенности);
    	ТабличныйДокумент.Вывести(ОбластьПодвал);
    	
    	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДоверенности.Ссылка);
    КонецЦикла;
    
    Возврат ТабличныйДокумент;
КонецФункции

Функция ПолучитьАдресПредставителя(ФизическоеЛицо)
	Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ФизическоеЛицо, Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица);
	Возврат Адрес;
КонецФункции

// Возвращает данные паспорта в виде строки "серия, номер, кем выдан"
// Параметры:
// Паспорт - Структура - Данные паспорта физ.лица
Функция ПаспортПредставление(Паспорт)
	ПаспортПредставление = "";
	Если Паспорт <> Неопределено Тогда		
		ПаспортПредставление = СтрШаблон("%1 %2, выдан %3",
										  Паспорт.Серия, Паспорт.Номер, Паспорт.КемВыдан);
	КонецЕсли;
	
	Возврат ПаспортПредставление;
КонецФункции

#Область ПрограммныйИнтерфейс
// Заполняет список команд печати.
// Параметры:
// КомандыПечати - ТаблицаЗначений - состав полей см. в функции управлениеПечатью.СоздатьКоллекциюКомандПечати.

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт   
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.РегистрацияККТ";  
	КомандаПечати.Идентификатор = "Доверенность";
	КомандаПечати.Представление = НСтр("ru = 'Доверенность'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь; 
КонецПроцедуры
#КонецОбласти