
&НаКлиенте
Процедура ПодборЛицензии(Команда)
	//ТЗ = ОткрытьФормуМодально("Обработка.ПодборЛицензий.Форма.Форма");
	ПараметрыФормы = Новый Структура("ИсключениеЛицензий",Объект.Товары);
	Форма = ПолучитьФорму("Обработка.ПодборЛицензий.Форма.Форма",ПараметрыФормы);
	ТЗ = Форма.ОткрытьМодально();
	
	перем_ТабЗнач = Объект.Товары;
	Если Не ТЗ = Неопределено Тогда
		ЗаписатьВыбранныеЛицензии(ТЗ, перем_ТабЗнач)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВыбранныеЛицензии(ТЗ, перем_ТабЗнач)
	Для Каждого Стр Из ТЗ Цикл
		Строка = перем_ТабЗнач.Добавить();
		Строка.Комментарий = Стр.Комментарий;
		Строка.ПривязанККлючу = Стр.ПривязанККлючу;
		Строка.КодАктивации = Стр.КодАктивации;
		Строка.РегистрационныйНомер = Стр.РегистрационныйНомер;
		Строка.Цена = Стр.Цена;
		//Строка.Лицензия = Стр.Лицензия;
		Строка.Номенклатура = Стр.Номенклатура;
		Строка.Клиент = Стр.Клиент;
	КонецЦикла;
	КопироватьДанныеФормы(перем_ТабЗнач, Объект.Товары);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуЛицензии(Команда)
	//ПараметрыФормы = Новый Структура("КодАктивации",ЭтаФорма.Элементы.Товары.ТекущиеДанные.КодАктивации);
	//Форма = ПолучитьФорму("Обработка.КарточкаЛицензии.Форма.Форма",ПараметрыФормы);
	//Форма.Открыть();
	АутсорсЛицензииКлиент.ОткрытьКарточкуЛицензии(ЭтаФорма.Элементы.Товары.ТекущиеДанные.КодАктивации);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//Проверка лицензии на остатках             
		Для Каждого ТекСтрокаТовары Из Объект.Товары Цикл
			Остаток = ПолучитьОстаткиЛицензии(Объект.Ссылка,ТекСтрокаТовары.Номенклатура,ТекСтрокаТовары.Серия,ТекСтрокаТовары.РегистрационныйНомер,ТекСтрокаТовары.КодАктивации);
			Если Остаток < 1 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нет остатков лицензии с указанными параметрами в строке " + ТекСтрокаТовары.НомерСтроки +"!";
				Сообщение.Поле = 	"Объект.Товары[" + Объект.Товары.Индекс(ТекСтрокаТовары) + "].КодАктивации";
				//Сообщение.ПутьКДанным = Объект.Товары;
				Сообщение.Сообщить();
				
				//Сообщить("Лицензия с указанными параметрами в строке " + ТекСтрокаТовары.НомерСтроки + " уже есть на остатках!");
				//Отказ = Истина;
			КонецЕсли;
		
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаткиЛицензии(Ссылка,Номенклатура,Серия,Номер,КодАктивации)
	Момент = ?(ЗначениеЗаполнено(Ссылка),Ссылка.МоментВремени(),Новый МоментВремени(ТекущаяДата()));
	Остатки = РегистрыНакопления.Лицензии.Остатки(Момент,Новый Структура(
																				"Номенклатура,Серия,Номер,КодАктивации",Номенклатура,Серия,Номер,КодАктивации));
	Остаток = 0;
	Если Остатки.Количество() = 1 Тогда
		Остаток = Остатки[0].Количество;
	КонецЕсли;
	Возврат Остаток;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ВводДоступен() Тогда
		ДанныеЛицензии = АутсорсЛицензииВызовСервера.ПолучитьДанныеЛицензииПоКодуАктивации(Данные);
		Если НЕ ЗначениеЗаполнено(ДанныеЛицензии) Тогда
			Сообщить("Лицензия с кодом активации " + Данные + " не найдена.");
		Иначе
			Отбор = Новый Структура("Номенклатура,Серия,РегистрационныйНомер,КодАктивации",
									ДанныеЛицензии.Номенклатура,
									ДанныеЛицензии.Серия,
									ДанныеЛицензии.Номер,
									ДанныеЛицензии.КодАктивации);
			Если НЕ Объект.Товары.НайтиСтроки(Отбор).Количество() > 0 Тогда
				СтрокаТовар = Объект.Товары.Добавить();
				СтрокаТовар.Номенклатура = ДанныеЛицензии.Номенклатура;
				СтрокаТовар.Серия = ДанныеЛицензии.Серия;
				СтрокаТовар.РегистрационныйНомер = ДанныеЛицензии.Номер;
				СтрокаТовар.КодАктивации = ДанныеЛицензии.КодАктивации;
			Иначе
				Предупреждение("Уже добавлена лицензия с заданными параметрами!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
