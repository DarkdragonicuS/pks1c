
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Отбор(Элементы.ДатаОткрытия);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	Для Каждого Строка Из Строки Цикл
		Строка.Значение.Данные.Номер = Формат(Число(Строка.Значение.Данные.Номер),"ЧГ="); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Отбор(Элемент)
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.Представление = "Программный отбор" Тогда
			Список.Отбор.Элементы.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Если Элемент = Элементы.Приоритет1 Тогда
		ПриоритетБул = Истина;
	ИначеЕсли Элемент = Элементы.Статус1 Тогда
		СтатусБул = Истина;
	ИначеЕсли Элемент = Элементы.Клиент1 Тогда
		КлиентБул = Истина;
	ИначеЕсли Элемент = Элементы.МоиЗаявки Тогда
		Если МоиЗаявки Тогда
			СтатусБул = Истина;
			Статус = ПолучитьПеречисление();
		КонецЕсли;
	КонецЕсли;
	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.Использование = Истина;
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаОтбора.Представление = "Программный отбор";

	Если ПриоритетБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приоритет");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Приоритет;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если СтатусБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Статус;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если КлиентБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Клиент");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Клиент;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если МоиЗаявки Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтветственноеЛицо");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ОтветственныеЛица = Новый СписокЗначений;
		ОтветственныеЛица.Добавить(ПолучитьФИО());
		ОтветственныеЛица.Добавить(ПолучитьПустоеФизическоеЛицо());
		//ЭлементОтбора.ПравоеЗначение = ПолучитьФИО();
		ЭлементОтбора.ПравоеЗначение = ОтветственныеЛица;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Статус1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("РежимВыбора",Истина);
	ПараметрыВыбора.Вставить("МножественныйВыбор",Истина);
	ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе",Истина);

	ОткрытьФорму("Перечисление.СтатусыЗаявок.ФормаВыбора",ПараметрыВыбора,Элемент);
	
	//Форма = ПолучитьФорму("Перечисление.СтатусыЗаявок.", , Элемент);
	//Форма.Открыть()
КонецПроцедуры

&НаКлиенте
Процедура Статус1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    ЗаполнитьСтатусЗначениями(ВыбранноеЗначение);
    Отбор(Неопределено);
КонецПроцедуры



&НаСервереБезКонтекста
Функция ПолучитьФИО()
	Возврат ПользователиКлиентСервер.ТекущийПользователь().ФизическоеЛицо;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПеречисление()
	СписокСтатусов = Новый СписокЗначений();
	СписокСтатусов.Добавить(Перечисления.СтатусыЗаявок.Открыта);
	СписокСтатусов.Добавить(Перечисления.СтатусыЗаявок.ВРаботе);
	СписокСтатусов.Добавить(Перечисления.СтатусыЗаявок.ОжиданиеДействийКлиента);
	Возврат СписокСтатусов;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПустоеФизическоеЛицо()
	Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
КонецФункции

&НаСервере
Процедура ЗаполнитьСтатусЗначениями(Значения)
	Статус.Очистить();
	Для Каждого Значение Из Значения Цикл
		Статус.Добавить(Значение);
	КонецЦикла;
КонецПроцедуры