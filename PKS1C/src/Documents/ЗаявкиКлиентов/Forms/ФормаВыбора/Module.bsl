
&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	Для Каждого Строка Из Строки Цикл
		Строка.Значение.Данные.Номер = Формат(Число(Строка.Значение.Данные.Номер),"ЧГ="); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Отбор(Элемент)
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.Представление = "Программный отбор" Тогда
			Список.Отбор.Элементы.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Если Элемент = Элементы.Приоритет1 Тогда
		ПриоритетБул = Истина;
	ИначеЕсли Элемент = Элементы.Статус1 Тогда
		СтатусБул = Истина;
	ИначеЕсли Элемент = Элементы.Клиент1 Тогда
		КлиентБул = Истина;
	ИначеЕсли Элемент = Элементы.МоиЗаявки Тогда
		Если МоиЗаявки Тогда
			СтатусБул = Истина;
			Статус = ПолучитьПеречесление();
		КонецЕсли;
	КонецЕсли;

	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.Использование = Истина;
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаОтбора.Представление = "Программный отбор";
	
	Если ПриоритетБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приоритет");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Приоритет;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если СтатусБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Статус;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если КлиентБул Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Клиент");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Клиент;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
	
	Если МоиЗаявки Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтветственноеЛицо");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ПолучитьФИО();
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.Представление = "Программный отбор";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("КлиентОтбор") Тогда
		Клиент = Параметры.КлиентОтбор;
		КлиентБул = Истина;
	КонецЕсли;
	Элементы.Список.РежимВыбора = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФИО()
	Возврат ПользователиКлиентСервер.ТекущийПользователь().ФизическоеЛицо;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Отбор(ЭтаФорма);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПеречесление()
	Возврат Перечисления.СтатусыЗаявок.Открыта;
КонецФункции
