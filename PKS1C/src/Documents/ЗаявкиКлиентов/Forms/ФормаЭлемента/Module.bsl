&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	КонтактноеЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
    	ДанныеВыбора = ПолучитьДанныеВыбораКлиента(Текст);
	ИначеЕсли ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораКлиента(,Объект.КонтактноеЛицо);
    КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораКлиента(Текст,Контакт=Неопределено)	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Текст) Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Клиенты.Ссылка КАК Ссылка,
			|	Клиенты.Контрагент КАК Контрагент,
			|	Клиенты.Наименование КАК КлиентНаименование,
			|	Клиенты.Контрагент.Наименование КАК КонтрагентНаименование
			|ИЗ
			|	Справочник.Клиенты КАК Клиенты
			|ГДЕ
			|	(Клиенты.Наименование ПОДОБНО &Текст
			|	ИЛИ Клиенты.ПолноеНаименование ПОДОБНО &Текст
			|	ИЛИ Клиенты.ИНН ПОДОБНО &Текст
			|	ИЛИ Клиенты.Контрагент.ИНН ПОДОБНО &Текст
			|	ИЛИ Клиенты.ОГРН ПОДОБНО &Текст)
			|	И НЕ Клиенты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Текст", "%" + Текст + "%");
	Иначе
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КлиентыКонтактныеЛица.Ссылка КАК Ссылка,
			|	КлиентыКонтактныеЛица.Ссылка.Контрагент КАК Контрагент,
			|	КлиентыКонтактныеЛица.Ссылка.Наименование КАК КлиентНаименование,
			|	КлиентыКонтактныеЛица.Ссылка.Контрагент.Наименование КАК КонтрагентНаименование
			|ИЗ
			|	Справочник.Клиенты.КонтактныеЛица КАК КлиентыКонтактныеЛица
			|ГДЕ
			|	КлиентыКонтактныеЛица.КонтактноеЛицо = &Контакт
			|	И НЕ КлиентыКонтактныеЛица.Ссылка.ПометкаУдаления
			|	И НЕ КлиентыКонтактныеЛица.КонтактноеЛицо.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Контакт",Контакт);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокВыбора = Новый СписокЗначений();
	
	МассивСловПоиска = СтрРазделить(Текст, " ", Ложь);		
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивРезультирующихСтрок = Новый Массив;		
		МассивРезультирующихСтрок.Добавить(ПодсветитьСлова(ВыборкаДетальныеЗаписи.КлиентНаименование,МассивСловПоиска));
		МассивРезультирующихСтрок.Добавить(Новый ФорматированнаяСтрока(" (" + ВыборкаДетальныеЗаписи.КонтрагентНаименование + ")",Новый Шрифт(,,,Истина)));		
		СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, Новый ФорматированнаяСтрока(МассивРезультирующихСтрок));
	КонецЦикла;

	Возврат СписокВыбора;
КонецФункции

&НаКлиенте
Процедура КонтактноеЛицоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
    	ДанныеВыбора = ПолучитьДанныеВыбораКонтактногоЛица(Текст);
	ИначеЕсли ЗначениеЗаполнено(Объект.Клиент) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораКонтактногоЛица(,Объект.Клиент);
    КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораКонтактногоЛица(Текст,Клиент=Неопределено)	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Текст) Тогда
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
			|ПОМЕСТИТЬ Телефоны
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
			|ГДЕ
			|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			|	И
			|		КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)
			|	И (КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона ПОДОБНО &Текст
			|	ИЛИ КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефонаБезКодов ПОДОБНО &Текст)
			|	И НЕ КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.ПометкаУдаления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КонтактныеЛицаПартнеров.Ссылка
			|ПОМЕСТИТЬ КонтактныеЛица
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	НЕ КонтактныеЛицаПартнеров.ПометкаУдаления
			|	И КонтактныеЛицаПартнеров.Наименование ПОДОБНО &Текст
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КонтактныеЛица.Ссылка ЕСТЬ NULL
			|			ТОГДА Телефоны.Ссылка
			|		ИНАЧЕ КонтактныеЛица.Ссылка
			|	КОНЕЦ КАК Ссылка
			|ПОМЕСТИТЬ Результат
			|ИЗ
			|	Телефоны КАК Телефоны
			|		ПОЛНОЕ СОЕДИНЕНИЕ КонтактныеЛица КАК КонтактныеЛица
			|		ПО КонтактныеЛица.Ссылка = Телефоны.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона, """") КАК НомерТелефона,
			|	Результат.Ссылка
			|ИЗ
			|	Результат КАК Результат
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК
			|			КонтактныеЛицаПартнеровКонтактнаяИнформация
			|		ПО Результат.Ссылка = КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
			|ГДЕ
			|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			|	И
			|		КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)";
		
		Запрос.УстановитьПараметр("Текст", "%" + Текст + "%");
	Иначе
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КлиентыКонтактныеЛица.КонтактноеЛицо КАК Ссылка,
			|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона
			|ИЗ
			|	Справочник.Клиенты.КонтактныеЛица КАК КлиентыКонтактныеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК
			|			КонтактныеЛицаПартнеровКонтактнаяИнформация
			|		ПО КлиентыКонтактныеЛица.КонтактноеЛицо = КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
			|ГДЕ
			|	КлиентыКонтактныеЛица.Ссылка = &Клиент
			|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			|	И
			|		КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица)
			|	И НЕ КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Клиент",Клиент);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокВыбора = Новый СписокЗначений();
	
	МассивСловПоиска = СтрРазделить(Текст, " ", Ложь);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, ПодсветитьСлова(Строка(ВыборкаДетальныеЗаписи.Ссылка) + "(" + ВыборкаДетальныеЗаписи.НомерТелефона + ")",МассивСловПоиска));
	КонецЦикла;

	Возврат СписокВыбора;
КонецФункции

&НаКлиенте
Процедура РазрешитьРедактирование(Команда)
	Если РазрешеноРедактирование() Тогда
		ЭтаФорма.ТолькоПросмотр = Ложь;
		Элементы.ТекстЗаявки.ТолькоПросмотр = Ложь;
		Элементы.Решение1.ТолькоПросмотр = Ложь;
		Элементы.Комментарий1.ТолькоПросмотр = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура КонтактноеЛицоПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛицаКонтактнаяИнформация.Представление,
		|	ФизическиеЛицаКонтактнаяИнформация.Тип
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Телефон = "";
	email = "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			email = ВыборкаДетальныеЗаписи.Представление;
		ИначеЕсли ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Телефон = ВыборкаДетальныеЗаписи.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Телефон) И НЕ ЗначениеЗаполнено(Объект.КонтактныйТелефон) Тогда
		Объект.КонтактныйТелефон = Телефон;
	КонецЕсли;
	Если ЗначениеЗаполнено(email) И НЕ ЗначениеЗаполнено(Объект.Почта) Тогда 
		Объект.Почта = email;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ТекстЗаявки = ТекущийОбъект.ТекстЗаявки.Получить();
	Решение = ТекущийОбъект.Решение.Получить();
	Комментарий = ТекущийОбъект.Комментарий.Получить();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ТекстЗаявки = Новый ХранилищеЗначения(ТекстЗаявки);
	ТекущийОбъект.Решение = Новый ХранилищеЗначения(Решение);
	ТекущийОбъект.Комментарий = Новый ХранилищеЗначения(Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗаполнитьКонтактыЛица(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтактыЛица(КонтактноеЛицо)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип,
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид,
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица Тогда
			Объект.КонтактныйТелефон = ВыборкаДетальныеЗаписи.Представление;
		ИначеЕсли ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
			Объект.Почта = ВыборкаДетальныеЗаписи.Представление;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыЗаявок.Открыта;
		Объект.Приоритет = Перечисления.ПриоритетыЗаявок.Средний;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПроверитьСтатус() Тогда
		Заблокировать();
	КонецЕсли;
	
	УправлениеВидимостьюИДоступностью();
КонецПроцедуры

&НаСервере
Функция ПроверитьСтатус()
	Если Объект.Статус = Перечисления.СтатусыЗаявок.Закрыта ИЛИ Объект.Статус = Перечисления.СтатусыЗаявок.Отменена Тогда
		Возврат Истина	
	КонецЕсли;	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ДобавитьВОтчетПочасовыхРабот(Команда)	
	Фрм = ПолучитьФорму("Документ.ДневнойОтчетПочасовыхРабот.ФормаВыбора");
	Фрм.ЗакрыватьПриВыборе = Истина;
	Фрм.ВладелецФормы = ЭтаФорма;
	Фрм.Открыть();                                                                                                	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ТекущаяДата = ТекущаяДата();
	Парам = Новый Структура;
	Парам.Вставить("Ключ", ВыбранноеЗначение);
	Форма = ПолучитьФорму("Документ.ДневнойОтчетПочасовыхРабот.ФормаОбъекта", Парам);
	Стр = Форма.Объект.Данные.Добавить();
	
	Клиент = Объект.Клиент;
	Стр.Клиент = Клиент;
	Стр.Организация = ПолучитьКонтрагента(Клиент);
	Стр.Заявка = Объект.Ссылка;

	//установка времени начала работ при добавлении заявки
	Если НачалоДня(ДатаОбъекта(ВыбранноеЗначение)) = НачалоДня(ТекущаяДата) Тогда
			Стр.ВремяПрибытия = Дата('00010101') + Час(ТекущаяДата) * 3600 + Минута(ТекущаяДата) * 60;	
	КонецЕсли;

	ТипыЗаявокВыездныеРаботы = Новый СписокЗначений();
	ТипыЗаявокВыездныеРаботы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаявок.Выезд"));
	ТипыЗаявокВыездныеРаботы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаявок.УстановкаОборудования"));

	Если ТипыЗаявокВыездныеРаботы.НайтиПоЗначению(Объект.ТипЗаявки) <> Неопределено Тогда
		 Стр.Удаленка = Ложь;
	Иначе
		Стр.Удаленка = Истина;
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
	//добавление ответственного, если не указан
	Если НЕ (Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Закрыта") ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаявок.Отменена") ИЛИ ЗначениеЗаполнено(Объект.ОтветственноеЛицо)) Тогда
		Объект.ОтветственноеЛицо = Форма.Объект.Исполнитель;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагента(Клиент)
	Возврат Клиент.Контрагент;
КонецФункции

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
//	Если Объект.Статус = ПолучитьСтатус() И Не ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда
//		Объект.ДатаЗакрытия = ТекущаяДата();		
//	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатус(Индекс = 1)
	Если Индекс = 1 Тогда 
		Возврат Перечисления.СтатусыЗаявок.Закрыта;
	Иначе
		Возврат Перечисления.СтатусыЗаявок.Отменена;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Заблокировать()
	ЭтаФорма.ТолькоПросмотр = Истина;
	Элементы.ТекстЗаявки.ТолькоПросмотр = Истина;
	Элементы.Решение1.ТолькоПросмотр = Истина;
	Элементы.Комментарий1.ТолькоПросмотр = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаРешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ВыбранноеЗначение = ВыбранноеЗначение + (КонецРабочегоДня() - Дата(1,1,1));
	Объект.ДатаНачалаПросрочки = КонецДня(ВыбранноеЗначение) - 86400;
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонецРабочегоДня()
	Возврат Константы.СверхурочкаНачало.Получить();
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не ЕстьПравоНаЗапись() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Запрещено изменять чужие заявки!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если Не ПроверитьНаличиеКонтактногоЛицаКлиента(Объект.Клиент,Объект.КонтактноеЛицо) Тогда
		Ответ = Вопрос("Указанного контактное лицо не соответствует клиенту. Создать соответствие?",РежимДиалогаВопрос.ДаНетОтмена,,,"Контакт не соответствует клиенту");
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ДобавлениеКонтактногоЛицаКлиента(Объект.Клиент,Объект.КонтактноеЛицо);
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
			Возврат;			
		КонецЕсли;
	КонецЕсли;
	Если Не ПроверитьНаличиеКонтактовКонтактногоЛицаКлиента(Объект.КонтактноеЛицо,ЗначениеЗаполнено(Объект.КонтактныйТелефон),ЗначениеЗаполнено(Объект.Почта)) Тогда
		Сообщить("У указанного контактного лица в карточке есть недостающие контакты");
	КонецЕсли;
	
	Дата = ТекущаяДата();
	Если Объект.Статус = ПолучитьСтатус() ИЛИ Объект.Статус = ПолучитьСтатус(2) Тогда
		Ответ = Вопрос("Внимание! После проведения форма будет заблокирована! Вы уверены?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Заблокировать();
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ДатаОткрытия = Дата; 
	КонецЕсли;
	Объект.Дата = Дата;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавлениеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо)
	АутсорсРаботы.ДобавлениеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНаличиеКонтактногоЛицаКлиента(Клиент,КонтактноеЛицо)
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Или Не ЗначениеЗаполнено(Клиент) Тогда
		Возврат Истина;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КлиентыКонтактныеЛица.КонтактноеЛицо
		|ИЗ
		|	Справочник.Клиенты.КонтактныеЛица КАК КлиентыКонтактныеЛица
		|ГДЕ
		|	КлиентыКонтактныеЛица.Ссылка = &Клиент
		|	И КлиентыКонтактныеЛица.КонтактноеЛицо = &КонтактноеЛицо";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("КонтактноеЛицо",КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьНаличиеКонтактовКонтактногоЛицаКлиента(КонтактноеЛицо,ТелефонУказан=Ложь,ЭлектроннаяПочтаУказана=Ложь)
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		Возврат Истина;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип,
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
		|ГДЕ
		|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТелефонКУказанию = Истина;
	ПочтаКУказанию = Истина;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица Тогда
			ТелефонКУказанию = Ложь;
		ИначеЕсли ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон И ВыборкаДетальныеЗаписи.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
			ПочтаКУказанию = Ложь;
		КонецЕсли
	КонецЦикла;
	ТелефонКУказанию = ТелефонКУказанию И ТелефонУказан;
	ПочтаКУказанию = ПочтаКУказанию И ЭлектроннаяПочтаУказана;
	Возврат НЕ (ТелефонКУказанию ИЛИ ПочтаКУказанию);
КонецФункции

&НаКлиенте
Процедура ОткрытьРаботыПоЗаявке(Команда)
	Парам = Новый Структура; 
    Отбор = Новый Структура; 
    Отбор.Вставить("Заявка", Объект.Ссылка);
    Парам.Вставить("Отбор", Отбор); 
     
    ОткрытьФорму("РегистрСведений.РаботыПоЗаявкам.ФормаСписка", Парам);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьКлиентаНаСомнительность(Клиент)
	СомнительныйКлиент = Ложь;
	Если ЗначениеЗаполнено(Клиент) И СтатусОбслуживания(Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.ЧерныйСписок") Тогда
		СомнительныйКлиент = Истина;
	ИначеЕсли ЗначениеЗаполнено(Клиент) И СтатусОбслуживания(Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.Недействующий") Тогда
		СомнительныйКлиент = Истина;
	КонецЕсли;
	Возврат СомнительныйКлиент;
КонецФункции

&НаКлиенте
Процедура УправлениеВидимостью()
	Если ПроверитьКлиентаНаСомнительность(Объект.Клиент) Тогда
		Элементы.СомнительныйКлиентКартинка.Видимость = Истина;
	Иначе
		Элементы.СомнительныйКлиентКартинка.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностью()
	Если Не ЕстьПравоНаЗапись() Тогда
		Заблокировать();
	КонецЕсли;
	Если РазрешеноРедактирование() Тогда
		Элементы.ФормаРазрешитьРедактирование.Доступность = Истина;
	Иначе
		Элементы.ФормаРазрешитьРедактирование.Доступность = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция СтатусОбслуживания(Клиент)
	Возврат АутсорсРаботы.СтатусОбслуживания(Клиент,Объект.Дата);
КонецФункции

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда		
		Если СтатусОбслуживания(Объект.Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.ЧерныйСписок") Тогда
			Предупреждение("Данный клиент находится в черном списке!",,"Сомнительный клиент");
		ИначеЕсли СтатусОбслуживания(Объект.Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.Недействующий") Тогда
			Предупреждение("У данного клиента отсутствует действующий договор обслуживания!",,"Сомнительный клиент");
		КонецЕсли;		
	КонецЕсли;
	УправлениеВидимостью();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаОбъекта(Объект)
	Возврат Объект.Дата;
КонецФункции

&НаСервереБезКонтекста
Функция РазрешеноРедактирование()
	Возврат УправлениеДоступом.ЕстьРоль("асРедактированиеЗакрытыхЗаявок");
КонецФункции

&НаКлиенте
Процедура УправлениеВидимостьюИДоступностью()
	УправлениеВидимостью();
	УправлениеДоступностью();
КонецПроцедуры

&НаСервере
Функция ЕстьПравоНаЗапись()
	СтарыйИсполнитель = Объект.Ссылка.ОтветственноеЛицо;
	Если Не УправлениеДоступом.ЕстьРоль("асРедактированиеЧужихЗаявок")
	   И (Не (СтарыйИсполнитель = Справочники.ФизическиеЛица.ПустаяСсылка() ИЛИ СтарыйИсполнитель = Пользователи.ТекущийПользователь().ФизическоеЛицо)
	   ИЛИ Не (Объект.ОтветственноеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() ИЛИ Объект.ОтветственноеЛицо = Пользователи.ТекущийПользователь().ФизическоеЛицо)) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции