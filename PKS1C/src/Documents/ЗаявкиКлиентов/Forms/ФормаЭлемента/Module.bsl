
&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	КонтактноеЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтактноеЛицоПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛицаКонтактнаяИнформация.Представление,
		|	ФизическиеЛицаКонтактнаяИнформация.Тип
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.КонтактноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Телефон = "";
	email = "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			email = ВыборкаДетальныеЗаписи.Представление;
		ИначеЕсли ВыборкаДетальныеЗаписи.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Телефон = ВыборкаДетальныеЗаписи.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Телефон) И НЕ ЗначениеЗаполнено(Объект.КонтактныйТелефон) Тогда
		Объект.КонтактныйТелефон = Телефон;
	КонецЕсли;
	Если ЗначениеЗаполнено(email) И НЕ ЗначениеЗаполнено(Объект.Почта) Тогда 
		Объект.Почта = email;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ТекстЗаявки = ТекущийОбъект.ТекстЗаявки.Получить();
	Решение = ТекущийОбъект.Решение.Получить();
	Комментарий = ТекущийОбъект.Комментарий.Получить();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ТекстЗаявки = Новый ХранилищеЗначения(ТекстЗаявки);
	ТекущийОбъект.Решение = Новый ХранилищеЗначения(Решение);
	ТекущийОбъект.Комментарий = Новый ХранилищеЗначения(Комментарий);
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ДатаОткрытия = ТекущаяДата();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.КонтактныйТелефон = ПолучитьНомер(ВыбранноеЗначение); 
КонецПроцедуры

&НаСервере
Функция ПолучитьНомер(ФизЛицо)
	Попытка
		Возврат ФизЛицо.КонтактнаяИнформация[0].НомерТелефона;
	Исключение
		Возврат "";
	КонецПопытки;
КонецФункции                                                                     

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыЗаявок.Открыта;
		Объект.ДатаОткрытия = ТекущаяДата();
		Объект.Приоритет = Перечисления.ПриоритетыЗаявок.Средний;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПроверитьСтатус() Тогда
		Заблокировать();
	КонецЕсли;
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ДатаОткрытия = ТекущаяДата();
	КонецЕсли;
	
	УправлениеВидимостью();
КонецПроцедуры

&НаСервере
Функция ПроверитьСтатус()
	Если Объект.Статус = Перечисления.СтатусыЗаявок.Закрыта ИЛИ Объект.Статус = Перечисления.СтатусыЗаявок.Отменена Тогда
		Возврат Истина	
	КонецЕсли;	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ДобавитьВОтчетПочасовыхРабот(Команда)	
	Фрм = ПолучитьФорму("Документ.ДневнойОтчетПочасовыхРабот.ФормаВыбора");
	Фрм.ЗакрыватьПриВыборе = Истина;
	Фрм.ВладелецФормы = ЭтаФорма;
	Фрм.Открыть();                                                                                                	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Парам = Новый Структура;
	Парам.Вставить("Ключ", ВыбранноеЗначение);
	Форма = ПолучитьФорму("Документ.ДневнойОтчетПочасовыхРабот.ФормаОбъекта", Парам);
	Стр = Форма.Объект.Данные.Добавить();
	
	Клиент = Объект.Клиент;
	Стр.Клиент = Клиент;
	Стр.Организация = ПолучитьКонтрагента(Клиент);
	Стр.Заявка = Объект.Ссылка;	
	
	Форма.Модифицированность = Истина;
	
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагента(Клиент)
	Возврат Клиент.Контрагент;
КонецФункции

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	Если Объект.Статус = ПолучитьСтатус() И Не ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда
		Объект.ДатаЗакрытия = ТекущаяДата();		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатус(Индекс = 1)
	Если Индекс = 1 Тогда 
		Возврат Перечисления.СтатусыЗаявок.Закрыта;
	Иначе
		Возврат Перечисления.СтатусыЗаявок.Отменена;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Заблокировать()
	ЭтаФорма.ТолькоПросмотр = Истина;
	Элементы.ТекстЗаявки.ТолькоПросмотр = Истина;
	Элементы.Решение1.ТолькоПросмотр = Истина;
	Элементы.ТекстЗаявки.Доступность = Ложь;
	Элементы.Решение1.Доступность = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура ПлановаяДатаРешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.ПлановаяДатаРешения = КонецДня(ВыбранноеЗначение);
	Объект.ДатаНачалаПросрочки = КонецДня(ВыбранноеЗначение) - 86400;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Статус = ПолучитьСтатус() ИЛИ Объект.Статус = ПолучитьСтатус(2) Тогда
		Ответ = Вопрос("Внимание! После проведения форма будет заблокирована! Вы уверены?", РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Заблокировать();
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Объект.Дата = ТекущаяДата();
	Объект.ДатаОткрытия = КонецДня(Объект.ДатаОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРаботыПоЗаявке(Команда)
	Парам = Новый Структура; 
    Отбор = Новый Структура; 
    Отбор.Вставить("Заявка", Объект.Ссылка);
    Парам.Вставить("Отбор", Отбор); 
     
    ОткрытьФорму("РегистрСведений.РаботыПоЗаявкам.ФормаСписка", Парам);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьКлиентаНаСомнительность(Клиент)
	СомнительныйКлиент = Ложь;
	Если ЗначениеЗаполнено(Клиент) И СтатусОбслуживания(Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.ЧерныйСписок") Тогда
		СомнительныйКлиент = Истина;
	ИначеЕсли ЗначениеЗаполнено(Клиент) И СтатусОбслуживания(Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.Недействующий") Тогда
		СомнительныйКлиент = Истина;
	КонецЕсли;
	Возврат СомнительныйКлиент;
КонецФункции

&НаКлиенте
Функция УправлениеВидимостью()
	Если ПроверитьКлиентаНаСомнительность(Объект.Клиент) Тогда
		Элементы.СомнительныйКлиентКартинка.Видимость = Истина;
	Иначе
		Элементы.СомнительныйКлиентКартинка.Видимость = Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция СтатусОбслуживания(Клиент)
	Возврат АутсорсРаботы.СтатусОбслуживания(Клиент,Объект.Дата);
КонецФункции

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда		
		Если СтатусОбслуживания(Объект.Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.ЧерныйСписок") Тогда
			Предупреждение("Данный клиент находится в черном списке!",,"Сомнительный клиент");
		ИначеЕсли СтатусОбслуживания(Объект.Клиент) = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровОбслуживания.Недействующий") Тогда
			Предупреждение("У данного клиента отсутствует действующий договор обслуживания!",,"Сомнительный клиент");
		КонецЕсли;		
	КонецЕсли;
	УправлениеВидимостью();
КонецПроцедуры
