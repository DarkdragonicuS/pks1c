
//Процедура Печать(ТабДок, Ссылка) Экспорт
//	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
//	Макет = Документы.ЗаявкиКлиентов.ПолучитьМакет("Печать");
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	ЗаявкиКлиентов.Дата,
//	|	ЗаявкиКлиентов.ДатаЗакрытия,
//	|	ЗаявкиКлиентов.ДатаОткрытия,
//	|	ЗаявкиКлиентов.Клиент,
//	|	ЗаявкиКлиентов.Комментарий,
//	|	ЗаявкиКлиентов.КонтактноеЛицо,
//	|	ЗаявкиКлиентов.КонтактныйТелефон,
//	|	ЗаявкиКлиентов.Номер,
//	|	ЗаявкиКлиентов.ОтветственноеЛицо,
//	|	ЗаявкиКлиентов.ПлановаяДатаРешения,
//	|	ЗаявкиКлиентов.Почта,
//	|	ЗаявкиКлиентов.Приоритет,
//	|	ЗаявкиКлиентов.Решение,
//	|	ЗаявкиКлиентов.Статус,
//	|	ЗаявкиКлиентов.ТекстЗаявки,
//	|	ЗаявкиКлиентов.ТемаЗаявки,
//	|	ЗаявкиКлиентов.ТипЗаявки
//	|ИЗ
//	|	Документ.ЗаявкиКлиентов КАК ЗаявкиКлиентов
//	|ГДЕ
//	|	ЗаявкиКлиентов.Ссылка В (&Ссылка)";
//	Запрос.Параметры.Вставить("Ссылка", Ссылка);
//	Выборка = Запрос.Выполнить().Выбрать();
//
//	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
//	Шапка = Макет.ПолучитьОбласть("Шапка");
//	ТабДок.Очистить();
//
//	ВставлятьРазделительСтраниц = Ложь;
//	Пока Выборка.Следующий() Цикл
//		Если ВставлятьРазделительСтраниц Тогда
//			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
//		КонецЕсли;
//
//		ТабДок.Вывести(ОбластьЗаголовок);
//
//		Шапка.Параметры.Заполнить(Выборка);
//		ТабДок.Вывести(Шапка, Выборка.Уровень());
//
//		ВставлятьРазделительСтраниц = Истина;
//	КонецЦикла;
//	//}}
//КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати - СписокЗначений - значение - ссылка на объект;
//                                            представление - имя области, в которой был выведен объект (выходной параметр);
//  ПараметрыВывода - Структура - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВызова");
    Если НужноПечататьМакет Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
        КоллекцияПечатныхФорм,
        "АктВызова",
        НСтр("ru = 'Акт вызова'"),
        ПечатьАктаВызова(МассивОбъектов, ОбъектыПечати),
        ,
        "Документ.ЗаявкиКлиентов.АктВызова");
    КонецЕсли;
КонецПроцедуры

Функция ПечатьАктаВызова(МассивОбъектов, ОбъектыПечати)
	// Создаем табличный документ и устанавливаем имя параметров печати.
    ТабличныйДокумент = Новый ТабличныйДокумент;
    ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктВызова";
    // Получаем запросом необходимые данные.
    Запрос = Новый Запрос();
    Запрос.Текст =
    "ВЫБРАТЬ
    |	ЗаявкиКлиентов.Ссылка
    |ИЗ
    |	Документ.ЗаявкиКлиентов КАК ЗаявкиКлиентов
    |ГДЕ
    |	ЗаявкиКлиентов.Ссылка В (&МассивОбъектов)";
    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    Шапка = Запрос.Выполнить().Выбрать();
    ПервыйДокумент = Истина;
    Пока Шапка.Следующий() Цикл
        Если Не ПервыйДокумент Тогда
            // Все документы нужно выводить на разных страницах.
            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        Макет = ПолучитьМакет("АктВызова");
        ТабличныйДокумент.Вывести(Макет);
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
    КонецЦикла;
    Возврат ТабличныйДокумент;
КонецФункции

#Область ПрограммныйИнтерфейс
// Заполняет список команд печати.
// Параметры:
// КомандыПечати - ТаблицаЗначений - состав полей см. в функции управлениеПечатью.СоздатьКоллекциюКомандПечати.

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт   
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ЗаявкиКлиентов";  
	КомандаПечати.Идентификатор = "АктВызова";
	КомандаПечати.Представление = НСтр("ru = 'Акт вызова'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь; 
КонецПроцедуры
#КонецОбласти