&НаКлиенте
Перем СчетчикТупизма Экспорт;

//&НаСервере
//Функция ПроверкаРоли(Босс)
//	
//	Если РольДоступна("Босс") Тогда	
//		Босс = Истина;
//	Иначе
//		Босс = Ложь;
//	КонецЕсли;
//	
//	Возврат Босс;
//	
//КонецФункции

&НаСервере
Процедура ИзменитьСтатусЗаяви(Заявка, Статус)

	// Вносим запись в регистр сведений об изменении статуса
	МенеджерЗаписи = РегистрыСведений.ИзмененияСтатусовЗаявок.СоздатьМенеджерЗаписи();
		
	МенеджерЗаписи.Заявка = Заявка;
	МенеджерЗаписи.Статус = Статус;
	МенеджерЗаписи.Дата = ТекущаяДата();
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьСтатусЗаявки(Статус)

	Если Статус = Перечисления.СтатусыЗаявки.Закрыта Тогда
		Закрыта = Истина;
	Иначе
		Закрыта = Ложь;
	КонецЕсли;
	
	Возврат Закрыта;
		
КонецФункции

&НаСервере
Функция ПоследнийСтатусЗаявки(Заявка);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИзмененияСтатусовЗаявок.Заявка КАК Заявка,
		|	ИзмененияСтатусовЗаявок.Статус КАК Статус,
		|	ИзмененияСтатусовЗаявок.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ИзмененияСтатусовЗаявок КАК ИзмененияСтатусовЗаявок
		|ГДЕ
		|	ИзмененияСтатусовЗаявок.Заявка = &Заявка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Заявка", Заявка); 
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПоследнийСтатус = ВыборкаДетальныеЗаписи.Статус; 
 	КонецЦикла;
	
	
	
КонецФункции


&НаСервере
Процедура ЗаблокироватьДокумент()
	
	Если Объект.СтатусЗаявки = Перечисления.СтатусыЗаявки.Закрыта Тогда
	//И	НЕ РольДоступна("Босс") Тогда	
		ЭтаФорма.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗИПиУслугиКоличествоПриИзменении(Элемент)
	ТекущиеДанныеТаблицыЗИП = Элементы.ЗИПиУслуги.ТекущиеДанные;
	ТекущиеДанныеТаблицыЗИП.Сумма = ТекущиеДанныеТаблицыЗИП.Количество * ТекущиеДанныеТаблицыЗИП.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ЗИПиУслугиЦенаПриИзменении(Элемент)
	ТекущиеДанныеТаблицыЗИП = Элементы.ЗИПиУслуги.ТекущиеДанные;
	ТекущиеДанныеТаблицыЗИП.Сумма = ТекущиеДанныеТаблицыЗИП.Количество * ТекущиеДанныеТаблицыЗИП.Цена;
КонецПроцедуры

&НаКлиенте
Процедура КлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.Склад.Пустая() Тогда
		Отказ = Истина;
		//Спицеально для Александра
		Если СчетчикТупизма = 1 Тогда
			Сообщить("ВЫБЕРИ СКЛАД!!!");
		ИначеЕсли СчетчикТупизма = 2 Тогда
			Сообщить("Але!!!");
		ИначеЕсли СчетчикТупизма = 3 Тогда
			Сообщить("Ну не тупи ты!!!");
		ИначеЕсли СчетчикТупизма = 4 Тогда
			Сообщить("ВЫБЕРИ СКЛАД БЛЯ!!!");
		ИначеЕсли СчетчикТупизма = 5 Тогда
			Сообщить("Ты уволен!!!");
			СчетчикТупизма = 0;
		КонецЕсли;
		СчетчикТупизма = СчетчикТупизма + 1;		
	КонецЕсли;
	
	
	Если Параметры.Ключ.Пустая() Тогда

		ИзменитьСтатусЗаяви(ЭтотОбъект.Объект.Ссылка, ЭтотОбъект.Объект.СтатусЗаявки);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	ЗаблокироватьДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностью();	
	ПриОткрытииНаСервере();
	СчетчикТупизма = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗаявкиПриИзменении(Элемент)
	
	ЭтотДокумент = ЭтотОбъект.Объект;
	ВсеХорошо = Истина;
	Если ПроверитьСтатусЗаявки(ЭтотДокумент.СтатусЗаявки) И
		НЕ ЭтотДокумент.СуммаТоваровИУслуг = ЭтотДокумент.СуммаОплат Тогда
		Сообщить("Сумма оплат не соответствует сумме товаров и работ!");
		ВсеХорошо = Ложь;
	КонецЕсли;
	
		
	Если ВсеХорошо Тогда
		
		Если НЕ Объект.Склад.Пустая() Тогда
			ИзменитьСтатусЗаяви(ЭтотДокумент.Ссылка, ЭтотДокумент.СтатусЗаявки);
			ЭтотОбъект.Записать();
			ЗаблокироватьДокумент();			
		Иначе 		
			Сообщить("ВЫБЕРИ СКЛАД!!!");		
		КонецЕсли;
		
	Иначе
		
		//Нужно вернуть предыдущий статус (он есть в регистре ИзмененияСтатусовЗаявок)
		ЭтотДокумент.СтатусЗаявки = ПоследнийСтатусЗаявки(ЭтотОбъект.Объект.Ссылка);
		ЭтаФорма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МодельНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

    ПараметрыФормы = Новый Структура;
    НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;

	Если ЗначениеЗаполнено(Объект.ВидОборудования) Тогда
		ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидНоменклатуры");
	    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ЭлементОтбора.ПравоеЗначение = Объект.ВидОборудования;
	    ЭлементОтбора.Использование = Истина;
	    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Производитель) Тогда
		ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Производитель");
	    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ЭлементОтбора.ПравоеЗначение = Объект.Производитель;
	    ЭлементОтбора.Использование = Истина;
	    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;

    ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКомпоновки);

    ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидОборудованияПриИзменении(Элемент)
	Объект.Модель = ПустаяМодель();
	Объект.Характеристика = ПустаяХарактеристика();
КонецПроцедуры

//&НаКлиенте
//Процедура ОплатаПриИзменении(Элемент)
//	
//	Босс = Ложь; 
//	Если НЕ ПроверкаРоли(Босс) Тогда		
//		Если Объект.Оплата.Количество() > 0 Тогда 
//			СтрокаТЧ = Элементы.Оплата.ТекущиеДанные;
//			СтрокаТЧ.ДатаПлатежа = ТекущаяДата();
//		КонецЕсли;	
//	КонецЕсли;

//КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустаяМодель()
	Возврат Справочники.Номенклатура.ПустаяСсылка();
КонецФункции

&НаСервереБезКонтекста
Функция ПустаяХарактеристика()
	Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	Объект.Модель = ПустаяМодель();
КонецПроцедуры

&НаКлиенте
Процедура ЦветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

    ПараметрыФормы = Новый Структура;
    НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;

	ЭлементОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ВладелецХарактеристики(Объект.Модель);
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

    ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКомпоновки);

    ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.ФормаВыбора", ПараметрыФормы, Элемент);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВладелецХарактеристики(Номенклатура)
	Если Номенклатура.ВидНоменклатуры.ИспользоватьХарактеристики Тогда
		Если Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
			Возврат Номенклатура;
		Иначе
			Возврат Номенклатура.ВидНоменклатуры;
		КонецЕсли;
	Иначе 
		Возврат Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	Объект.ВидОборудования = ВидОборудования(Объект.Модель);
	Объект.Производитель = Производитель(Объект.Модель);
	УправлениеДоступностью();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуютсяХарактеристики(Номенклатура)
	Если Номенклатура.ВидНоменклатуры.ИспользоватьХарактеристики Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция УправлениеДоступностью()
	Если ЗначениеЗаполнено(Объект.Модель) И ИспользуютсяХарактеристики(Объект.Модель) Тогда
		Элементы.Характеристика.Доступность = Истина
	Иначе
		Элементы.Характеристика.Доступность = Ложь;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ВидОборудования(Номенклатура)
	ВидОборудования = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ВидОборудования = Номенклатура.ВидНоменклатуры;
	КонецЕсли;
	Возврат ВидОборудования;
КонецФункции

&НаСервереБезКонтекста
Функция Производитель(Номенклатура)
	Производитель = Справочники.Производители.ПустаяСсылка();
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Производитель = Номенклатура.Производитель;
	КонецЕсли;
	Возврат Производитель;
КонецФункции