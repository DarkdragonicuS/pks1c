//&НаКлиенте
//Перем РегНом;

//&НаКлиенте
//Перем КодАктив;

//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//	РегНом = Новый Массив;
//	КодАктив = Новый Массив;
//	
//	Для Каждого Строка Из Объект.Товары Цикл
//		РегНом.Добавить(Строка.РегистрационныйНомер);
//		КодАктив.Добавить(Строка.КодАктивации);
//	КонецЦикла;
//КонецПроцедуры

//&НаКлиенте
//Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
//	ПередЗаписьюНаСервере(РегНом, КодАктив);
//	ПриОткрытии(Отказ);
//КонецПроцедуры

//&НаСервере
//Функция ПередЗаписьюНаСервере(РегНом, КодАктив)
//	Отказ = Ложь;
//	Если Не Объект.Проведен Тогда
//		ПустаяЛицензия = Справочники.Лицензии.ПустаяСсылка();
//		Для Каждого СтрокаТЧ Из Объект.Товары Цикл
//			Если ЗначениеЗаполнено(СтрокаТЧ.КодАктивации) Тогда
//				Если Не Справочники.Лицензии.НайтиПоРеквизиту("КодАктивации", СтрокаТЧ.КодАктивации) = ПустаяЛицензия Тогда 
//					Отказ = Истина;
//					Сообщить("Ошибка! Лицензия с кодом активации " + Строка(СтрокаТЧ.КодАктивации) + " уже существует");
//				КонецЕсли;
//			ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.РегистрационныйНомер) Тогда
//				Если Не Справочники.Лицензии.НайтиПоРеквизиту("РегистрационныйНомер", СтрокаТЧ.РегистрационныйНомер) = ПустаяЛицензия Тогда 
//					Отказ = Истина;
//					Сообщить("Ошибка! Лицензия с регистрационным номером " + Строка(СтрокаТЧ.РегистрационныйНомер) + " уже существует");
//				КонецЕсли;
//			КонецЕсли;
//		КонецЦикла;
//	Иначе
//		Для Каждого Строка Из Объект.Товары Цикл
//			Если Не Строка.КодАктивации = КодАктив[Строка.НомерСтроки - 1] Или Не Строка.РегистрационныйНомер = РегНом[Строка.НомерСтроки - 1] Тогда
//				Если Не ПустаяСтрока(КодАктив[Строка.НомерСтроки - 1]) Тогда				
//					ЛицензияСсылка = Справочники.Лицензии.НайтиПоРеквизиту("КодАктивации", КодАктив[Строка.НомерСтроки - 1]);
//				ИначеЕсли Не ПустаяСтрока(РегНом[Строка.НомерСтроки - 1]) Тогда
//					ЛицензияСсылка = Справочники.Лицензии.НайтиПоРеквизиту("РегистрационныйНомер", Строка.РегистрационныйНомер);
//				КонецЕсли;
//				Лицензия = ЛицензияСсылка.ПолучитьОбъект();
//				Лицензия.Номенклатура = Строка.Номенклатура;
//				Лицензия.РегистрационныйНомер = Строка.РегистрационныйНомер;
//				Лицензия.КодАктивации = Строка.КодАктивации;
//				Лицензия.Наименование = Строка.Номенклатура.Наименование;
//				Лицензия.Записать();
//			КонецЕсли;			
//		КонецЦикла;
//	КонецЕсли;
//	
//	Возврат Отказ;
//КонецФункции

&НаКлиенте
Процедура ОткрытьКарточкуЛицензии(Команда)
	//ПараметрыФормы = Новый Структура("КодАктивации",ЭтаФорма.Элементы.Товары.ТекущиеДанные.КодАктивации);
	//Форма = ПолучитьФорму("Обработка.КарточкаЛицензии.Форма.Форма",ПараметрыФормы);
	//Форма.Открыть();
	АутсорсЛицензииКлиент.ОткрытьКарточкуЛицензии(ЭтаФорма.Элементы.Товары.ТекущиеДанные.КодАктивации);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//Проверка лицензии на остатках             
		Для Каждого ТекСтрокаТовары Из Объект.Товары Цикл
			Остаток = ПолучитьОстаткиЛицензии(Объект.Ссылка,ТекСтрокаТовары.Номенклатура,ТекСтрокаТовары.Серия,ТекСтрокаТовары.РегистрационныйНомер,ТекСтрокаТовары.КодАктивации);
			Если Остаток > 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Лицензия с указанными параметрами в строке " + ТекСтрокаТовары.НомерСтроки + " уже есть на остатках!";
				Сообщение.Поле = 	"Объект.Товары[" + Объект.Товары.Индекс(ТекСтрокаТовары) + "].КодАктивации";
				//Сообщение.ПутьКДанным = Объект.Товары;
				Сообщение.Сообщить();
				
				//Сообщить("Лицензия с указанными параметрами в строке " + ТекСтрокаТовары.НомерСтроки + " уже есть на остатках!");
				//Отказ = Истина;
			КонецЕсли;
		
		КонецЦикла;
	КонецЕсли;                    
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаткиЛицензии(Ссылка,Номенклатура,Серия,Номер,КодАктивации)
	Момент = ?(ЗначениеЗаполнено(Ссылка),Ссылка.МоментВремени(),Новый МоментВремени(ТекущаяДата()));
	Остатки = РегистрыНакопления.Лицензии.Остатки(Момент,Новый Структура(
																				"Номенклатура,Серия,Номер,КодАктивации",Номенклатура,Серия,Номер,КодАктивации));
	Остаток = 0;
	Если Остатки.Количество() = 1 Тогда
		Остаток = Остатки[0].Количество;
	КонецЕсли;
	Возврат Остаток;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ВводДоступен() Тогда
		ДанныеЛицензии = АутсорсЛицензииВызовСервера.ПолучитьДанныеЛицензииПоКодуАктивации(Данные);
		Если НЕ ЗначениеЗаполнено(ДанныеЛицензии) Тогда
			Сообщить("Лицензия с кодом активации " + Данные + " не найдена.");
		Иначе
			Отбор = Новый Структура("Номенклатура,Серия,РегистрационныйНомер,КодАктивации",
									ДанныеЛицензии.Номенклатура,
									ДанныеЛицензии.Серия,
									ДанныеЛицензии.Номер,
									ДанныеЛицензии.КодАктивации);
			Если НЕ Объект.Товары.НайтиСтроки(Отбор).Количество() > 0 Тогда
				СтрокаТовар = Объект.Товары.Добавить();
				СтрокаТовар.Номенклатура = ДанныеЛицензии.Номенклатура;
				СтрокаТовар.Серия = ДанныеЛицензии.Серия;
				СтрокаТовар.РегистрационныйНомер = ДанныеЛицензии.Номер;
				СтрокаТовар.КодАктивации = ДанныеЛицензии.КодАктивации;
			Иначе
				Предупреждение("Уже добавлена лицензия с заданными параметрами!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
